{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4","program":"/home/nerun/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=b2c4c03cde5edaf5","-C","extra-filename=-b2c4c03cde5edaf5","--out-dir","/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps","-L","dependency=/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps","--extern","futures_core=/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps/libfutures_core-5b7819758a089f66.rmeta","--extern","futures_task=/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps/libfutures_task-72735e94c771d80c.rmeta","--extern","pin_utils=/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps/libpin_utils-93dee31efbad5763.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/nerun/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/nerun/Documents/Rust/CUIFileManager/target/rls/debug/deps/libfutures_util-b2c4c03cde5edaf5.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[1882865023668096486,14955671781667485136]},"crate_root":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src","external_crates":[{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4475606148663180750,5419346832002689975]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[18209801913766412741,14708739502762596590]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17534900064032465835,11074003829314630197]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[1905393756433109916,10724109288589604044]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[7620319826054890005,5717302534568989792]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[5259792513756561775,1479263106690228407]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[14346116818397650781,2977216825120829807]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[3936655635976934790,16389253933182331078]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[5174545163365617014,15822577537272331306]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[1537777832242498626,9514621648460519184]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[18358940337312830879,10081988574518201852]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[12121062121650459058,11489301800313262789]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[14319052529584542008,1066639489166686923]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9012578297089494616,4116522626272880912]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8611561841149342373,8229239553347846203]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[11280812509560915015,7050725619216479437]}},{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[17066113138356546766,18252377466930370546]}}],"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1745,"byte_end":1750,"line_start":38,"line_end":38,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":1771,"byte_end":1778,"line_start":39,"line_end":39,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":168},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":2015,"byte_end":2028,"line_start":52,"line_end":52,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4164,"byte_end":4175,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":1,"index":7916},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4177,"byte_end":4183,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4185,"byte_end":4194,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4220,"byte_end":4229,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4231,"byte_end":4245,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4247,"byte_end":4262,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4378,"byte_end":4385,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4387,"byte_end":4400,"line_start":17,"line_end":17,"column_start":14,"column_end":27},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4402,"byte_end":4406,"line_start":17,"line_end":17,"column_start":29,"column_end":33},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4408,"byte_end":4417,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3360},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4419,"byte_end":4426,"line_start":17,"line_end":17,"column_start":46,"column_end":53},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4428,"byte_end":4438,"line_start":17,"line_end":17,"column_start":55,"column_end":65},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3333},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4440,"byte_end":4443,"line_start":17,"line_end":17,"column_start":67,"column_end":70},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3383},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4445,"byte_end":4455,"line_start":17,"line_end":17,"column_start":72,"column_end":82},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3347},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4457,"byte_end":4461,"line_start":17,"line_end":17,"column_start":84,"column_end":88},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4463,"byte_end":4472,"line_start":17,"line_end":17,"column_start":90,"column_end":99},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3410},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4740,"byte_end":4747,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3423},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4749,"byte_end":4756,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3449},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4758,"byte_end":4768,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3435},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4770,"byte_end":4779,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3463},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4781,"byte_end":4791,"line_start":32,"line_end":32,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3472},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4793,"byte_end":4799,"line_start":32,"line_end":32,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3486},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4801,"byte_end":4806,"line_start":32,"line_end":32,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3519},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4808,"byte_end":4814,"line_start":32,"line_end":32,"column_start":73,"column_end":79},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4816,"byte_end":4832,"line_start":32,"line_end":32,"column_start":81,"column_end":97},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4838,"byte_end":4850,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4852,"byte_end":4864,"line_start":33,"line_end":33,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4988,"byte_end":4992,"line_start":42,"line_end":42,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4994,"byte_end":4998,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5039,"byte_end":5046,"line_start":45,"line_end":45,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3591},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5048,"byte_end":5055,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5102,"byte_end":5112,"line_start":48,"line_end":48,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3597},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5114,"byte_end":5123,"line_start":48,"line_end":48,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3610},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5161,"byte_end":5173,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":887},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5213,"byte_end":5220,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5222,"byte_end":5228,"line_start":54,"line_end":54,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5265,"byte_end":5268,"line_start":57,"line_end":57,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5270,"byte_end":5272,"line_start":57,"line_end":57,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5274,"byte_end":5279,"line_start":57,"line_end":57,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3622},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5281,"byte_end":5286,"line_start":57,"line_end":57,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5321,"byte_end":5325,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5327,"byte_end":5332,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5334,"byte_end":5339,"line_start":60,"line_end":60,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5341,"byte_end":5346,"line_start":60,"line_end":60,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3632},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5348,"byte_end":5352,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5354,"byte_end":5359,"line_start":60,"line_end":60,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5361,"byte_end":5366,"line_start":60,"line_end":60,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5368,"byte_end":5373,"line_start":60,"line_end":60,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5524,"byte_end":5530,"line_start":68,"line_end":68,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3798},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5532,"byte_end":5538,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5706,"byte_end":5714,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5716,"byte_end":5725,"line_start":77,"line_end":77,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5727,"byte_end":5736,"line_start":77,"line_end":77,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5738,"byte_end":5747,"line_start":77,"line_end":77,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3806},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5749,"byte_end":5756,"line_start":77,"line_end":77,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5758,"byte_end":5766,"line_start":77,"line_end":77,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3847},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5768,"byte_end":5776,"line_start":77,"line_end":77,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3875},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5778,"byte_end":5786,"line_start":77,"line_end":77,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5962,"byte_end":5972,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":5974,"byte_end":5983,"line_start":86,"line_end":86,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3958},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":6137,"byte_end":6143,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3273,"byte_end":3282,"line_start":95,"line_end":95,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3284,"byte_end":3296,"line_start":95,"line_end":95,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121236,"byte_end":121247,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121249,"byte_end":121255,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121257,"byte_end":121266,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3975},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121382,"byte_end":121387,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3990},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121389,"byte_end":121396,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4004},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121398,"byte_end":121404,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121406,"byte_end":121415,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1264},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121417,"byte_end":121423,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121425,"byte_end":121434,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4046},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121436,"byte_end":121443,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1397},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121445,"byte_end":121449,"line_start":16,"line_end":16,"column_start":68,"column_end":72},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121451,"byte_end":121458,"line_start":16,"line_end":16,"column_start":74,"column_end":81},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4077},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121460,"byte_end":121464,"line_start":16,"line_end":16,"column_start":83,"column_end":87},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121466,"byte_end":121473,"line_start":16,"line_end":16,"column_start":89,"column_end":96},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121479,"byte_end":121482,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121484,"byte_end":121488,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1727},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121490,"byte_end":121494,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4124},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121496,"byte_end":121504,"line_start":17,"line_end":17,"column_start":22,"column_end":30},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121506,"byte_end":121510,"line_start":17,"line_end":17,"column_start":32,"column_end":36},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4116},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121512,"byte_end":121526,"line_start":17,"line_end":17,"column_start":38,"column_end":52},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4136},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121528,"byte_end":121532,"line_start":17,"line_end":17,"column_start":54,"column_end":58},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121534,"byte_end":121543,"line_start":17,"line_end":17,"column_start":60,"column_end":69},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121545,"byte_end":121554,"line_start":17,"line_end":17,"column_start":71,"column_end":80},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4089},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121556,"byte_end":121568,"line_start":17,"line_end":17,"column_start":82,"column_end":94},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4160},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121570,"byte_end":121574,"line_start":17,"line_end":17,"column_start":96,"column_end":100},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121580,"byte_end":121589,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":1929},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121591,"byte_end":121595,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4192},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121597,"byte_end":121600,"line_start":18,"line_end":18,"column_start":22,"column_end":25},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2869},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122197,"byte_end":122207,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122209,"byte_end":122216,"line_start":41,"line_end":41,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4229},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122218,"byte_end":122225,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2330},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122227,"byte_end":122237,"line_start":41,"line_end":41,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122239,"byte_end":122248,"line_start":41,"line_end":41,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4251},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122250,"byte_end":122260,"line_start":41,"line_end":41,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122262,"byte_end":122268,"line_start":41,"line_end":41,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2406},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122270,"byte_end":122275,"line_start":41,"line_end":41,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2505},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122277,"byte_end":122283,"line_start":41,"line_end":41,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4325},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122289,"byte_end":122299,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4339},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122301,"byte_end":122310,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2628},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122312,"byte_end":122321,"line_start":42,"line_end":42,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2682},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122323,"byte_end":122335,"line_start":42,"line_end":42,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122337,"byte_end":122347,"line_start":42,"line_end":42,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2818},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122349,"byte_end":122356,"line_start":42,"line_end":42,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2586},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122358,"byte_end":122368,"line_start":42,"line_end":42,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4278},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122370,"byte_end":122377,"line_start":42,"line_end":42,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122383,"byte_end":122395,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122397,"byte_end":122409,"line_start":43,"line_end":43,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122411,"byte_end":122420,"line_start":43,"line_end":43,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122744,"byte_end":122748,"line_start":57,"line_end":57,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4380},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122750,"byte_end":122754,"line_start":57,"line_end":57,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3054},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122793,"byte_end":122799,"line_start":60,"line_end":60,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4386},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122801,"byte_end":122807,"line_start":60,"line_end":60,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122844,"byte_end":122849,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4392},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122851,"byte_end":122856,"line_start":63,"line_end":63,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3103},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122891,"byte_end":122895,"line_start":66,"line_end":66,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122897,"byte_end":122901,"line_start":66,"line_end":66,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122942,"byte_end":122949,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4407},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122951,"byte_end":122958,"line_start":69,"line_end":69,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3159},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":122999,"byte_end":123006,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3151},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123008,"byte_end":123014,"line_start":72,"line_end":72,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3184},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123053,"byte_end":123059,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":4413},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123061,"byte_end":123067,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3222},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123106,"byte_end":123112,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":3227},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":123114,"byte_end":123120,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1122}},{"kind":"Use","ref_id":{"krate":0,"index":2082},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3355,"byte_end":3364,"line_start":98,"line_end":98,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3366,"byte_end":3378,"line_start":98,"line_end":98,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342638,"byte_end":342649,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342687,"byte_end":342695,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342697,"byte_end":342710,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":7987},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342743,"byte_end":342750,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31578},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342752,"byte_end":342756,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":7997},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342758,"byte_end":342763,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31618},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342765,"byte_end":342773,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":1,"index":31627},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342775,"byte_end":342789,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342821,"byte_end":342826,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342828,"byte_end":342838,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342840,"byte_end":342850,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342856,"byte_end":342865,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342867,"byte_end":342881,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342883,"byte_end":342898,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3266}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342926,"byte_end":342936,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3266}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":3844,"line_start":1,"line_end":122,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3294}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":313,"byte_end":319,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":322,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":578,"byte_end":599,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":832,"byte_end":875,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":316},{"krate":0,"index":327},{"krate":0,"index":763},{"krate":0,"index":775},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":929},{"krate":0,"index":934},{"krate":0,"index":967},{"krate":0,"index":976},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1039},{"krate":0,"index":1048},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1115},{"krate":0,"index":1116}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3846,"byte_end":3857,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3858,"byte_end":3861,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3862,"byte_end":3936,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":3937,"byte_end":4015,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/mod.rs","byte_start":4016,"byte_end":4046,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24785,"byte_end":24792,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flatten`](super::FutureExt::flatten) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24640,"byte_end":24705,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24706,"byte_end":24773,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26182,"byte_end":26195,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26042,"byte_end":26121,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26122,"byte_end":26170,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28975,"byte_end":28979,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":3317}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fuse`](super::FutureExt::fuse) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28819,"byte_end":28878,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":28896,"byte_end":28963,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30819,"byte_end":30829,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29197,"byte_end":29265,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29270,"byte_end":29273,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29278,"byte_end":29346,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29351,"byte_end":29396,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29401,"byte_end":29404,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29409,"byte_end":29423,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29428,"byte_end":29431,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29436,"byte_end":29443,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29448,"byte_end":29489,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29494,"byte_end":29525,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29530,"byte_end":29586,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29591,"byte_end":29615,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29620,"byte_end":29655,"line_start":34,"line_end":34,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29660,"byte_end":29685,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29690,"byte_end":29693,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29698,"byte_end":29747,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29752,"byte_end":29755,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29760,"byte_end":29802,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29807,"byte_end":29846,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29851,"byte_end":29890,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29895,"byte_end":29912,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29917,"byte_end":29920,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29925,"byte_end":29995,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30000,"byte_end":30039,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30044,"byte_end":30085,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30090,"byte_end":30116,"line_start":47,"line_end":47,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30121,"byte_end":30124,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30129,"byte_end":30139,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30144,"byte_end":30161,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30166,"byte_end":30200,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30205,"byte_end":30252,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30257,"byte_end":30306,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30311,"byte_end":30373,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30378,"byte_end":30402,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30407,"byte_end":30450,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30455,"byte_end":30512,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30517,"byte_end":30592,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30597,"byte_end":30627,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30632,"byte_end":30649,"line_start":60,"line_end":60,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30654,"byte_end":30668,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30673,"byte_end":30757,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30762,"byte_end":30771,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30776,"byte_end":30781,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30786,"byte_end":30795,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30800,"byte_end":30807,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31759,"byte_end":31769,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3326}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::FutureExt::into_stream) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31608,"byte_end":31681,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31682,"byte_end":31730,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3333},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32790,"byte_end":32793,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map`](super::FutureExt::map) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32636,"byte_end":32693,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32711,"byte_end":32778,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34066,"byte_end":34070,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3351}],"decl_id":null,"docs":" Future for the [`then`](super::FutureExt::then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`then`](super::FutureExt::then) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":33910,"byte_end":33969,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":33987,"byte_end":34054,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3360},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35310,"byte_end":35317,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364}],"decl_id":null,"docs":" Future for the [`inspect`](super::FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect`](super::FutureExt::inspect) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35148,"byte_end":35213,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35231,"byte_end":35298,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3374},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36590,"byte_end":36599,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"UnitError","qualname":"::future::future::unit_error::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3376}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`unit_error`](super::FutureExt::unit_error) combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36418,"byte_end":36493,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36511,"byte_end":36578,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3383},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37530,"byte_end":37540,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"NeverError","qualname":"::future::future::never_error::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3385}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`never_error`](super::FutureExt::never_error) combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37356,"byte_end":37433,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37451,"byte_end":37518,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8944,"byte_end":8953,"line_start":85,"line_end":85,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8845,"byte_end":8919,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8920,"byte_end":8933,"line_start":84,"line_end":84,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9785,"byte_end":9788,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8968,"byte_end":9043,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9048,"byte_end":9071,"line_start":87,"line_end":87,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9076,"byte_end":9079,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9084,"byte_end":9158,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9163,"byte_end":9234,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9239,"byte_end":9301,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9306,"byte_end":9309,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9314,"byte_end":9385,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9390,"byte_end":9461,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9466,"byte_end":9487,"line_start":95,"line_end":95,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9492,"byte_end":9495,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9500,"byte_end":9514,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9519,"byte_end":9522,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9527,"byte_end":9534,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9539,"byte_end":9580,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9585,"byte_end":9620,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9625,"byte_end":9628,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9633,"byte_end":9662,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9667,"byte_end":9710,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9715,"byte_end":9751,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9756,"byte_end":9765,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9770,"byte_end":9777,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10811,"byte_end":10815,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":9958,"byte_end":10034,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10039,"byte_end":10082,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10087,"byte_end":10090,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10095,"byte_end":10166,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10171,"byte_end":10245,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10250,"byte_end":10266,"line_start":121,"line_end":121,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10271,"byte_end":10274,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10279,"byte_end":10354,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10359,"byte_end":10370,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10375,"byte_end":10378,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10383,"byte_end":10454,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10459,"byte_end":10485,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10490,"byte_end":10493,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10498,"byte_end":10512,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10517,"byte_end":10520,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10525,"byte_end":10532,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10537,"byte_end":10578,"line_start":132,"line_end":132,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10583,"byte_end":10618,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10623,"byte_end":10626,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10631,"byte_end":10665,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10670,"byte_end":10735,"line_start":136,"line_end":136,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10740,"byte_end":10777,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10782,"byte_end":10791,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":10796,"byte_end":10803,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11685,"byte_end":11696,"line_start":171,"line_end":171,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11027,"byte_end":11102,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11107,"byte_end":11128,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11133,"byte_end":11136,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11141,"byte_end":11221,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11226,"byte_end":11298,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11303,"byte_end":11306,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11311,"byte_end":11325,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11330,"byte_end":11333,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11338,"byte_end":11345,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11350,"byte_end":11391,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11396,"byte_end":11431,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11436,"byte_end":11439,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11444,"byte_end":11458,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11463,"byte_end":11491,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11496,"byte_end":11532,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11537,"byte_end":11549,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11554,"byte_end":11592,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11597,"byte_end":11603,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11608,"byte_end":11611,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11616,"byte_end":11651,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11656,"byte_end":11665,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11670,"byte_end":11677,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12501,"byte_end":12513,"line_start":201,"line_end":201,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11842,"byte_end":11918,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11923,"byte_end":11944,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11949,"byte_end":11952,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":11957,"byte_end":12036,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12041,"byte_end":12113,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12118,"byte_end":12121,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12126,"byte_end":12140,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12145,"byte_end":12148,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12153,"byte_end":12160,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12165,"byte_end":12206,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12211,"byte_end":12246,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12251,"byte_end":12254,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12259,"byte_end":12273,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12278,"byte_end":12306,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12311,"byte_end":12347,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12352,"byte_end":12364,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12369,"byte_end":12407,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12412,"byte_end":12418,"line_start":196,"line_end":196,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12423,"byte_end":12426,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12431,"byte_end":12467,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12472,"byte_end":12481,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12486,"byte_end":12493,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13258,"byte_end":13269,"line_start":227,"line_end":227,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12660,"byte_end":12713,"line_start":209,"line_end":209,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12718,"byte_end":12721,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12726,"byte_end":12800,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12805,"byte_end":12868,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12873,"byte_end":12876,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12881,"byte_end":12895,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12900,"byte_end":12903,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12908,"byte_end":12915,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12920,"byte_end":12961,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":12966,"byte_end":13001,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13006,"byte_end":13041,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13046,"byte_end":13049,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13054,"byte_end":13084,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13089,"byte_end":13127,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13132,"byte_end":13183,"line_start":223,"line_end":223,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13188,"byte_end":13224,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13229,"byte_end":13238,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13243,"byte_end":13250,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14100,"byte_end":14107,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13374,"byte_end":13438,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13443,"byte_end":13479,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13484,"byte_end":13487,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13492,"byte_end":13561,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13566,"byte_end":13603,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13608,"byte_end":13611,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13616,"byte_end":13676,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13681,"byte_end":13684,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13689,"byte_end":13760,"line_start":242,"line_end":242,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13765,"byte_end":13791,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13796,"byte_end":13799,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13804,"byte_end":13818,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13823,"byte_end":13826,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13831,"byte_end":13838,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13843,"byte_end":13884,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13889,"byte_end":13924,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13929,"byte_end":13932,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13937,"byte_end":13983,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":13988,"byte_end":14029,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14034,"byte_end":14066,"line_start":253,"line_end":253,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14071,"byte_end":14080,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14085,"byte_end":14092,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15212,"byte_end":15226,"line_start":290,"line_end":290,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14321,"byte_end":14396,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14401,"byte_end":14424,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14429,"byte_end":14432,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14437,"byte_end":14509,"line_start":268,"line_end":268,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14514,"byte_end":14587,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14592,"byte_end":14606,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14611,"byte_end":14614,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14619,"byte_end":14689,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14694,"byte_end":14712,"line_start":273,"line_end":273,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14717,"byte_end":14720,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14725,"byte_end":14739,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14744,"byte_end":14747,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14752,"byte_end":14759,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14764,"byte_end":14805,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14810,"byte_end":14845,"line_start":279,"line_end":279,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14850,"byte_end":14893,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14898,"byte_end":14901,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14906,"byte_end":14946,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":14951,"byte_end":15017,"line_start":283,"line_end":283,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15022,"byte_end":15025,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15030,"byte_end":15083,"line_start":285,"line_end":285,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15088,"byte_end":15134,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15139,"byte_end":15178,"line_start":287,"line_end":287,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15183,"byte_end":15192,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15197,"byte_end":15204,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16262,"byte_end":16266,"line_start":314,"line_end":314,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15367,"byte_end":15440,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15445,"byte_end":15511,"line_start":299,"line_end":299,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15516,"byte_end":15534,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15539,"byte_end":15542,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15547,"byte_end":15614,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15619,"byte_end":15684,"line_start":303,"line_end":303,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15689,"byte_end":15761,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15766,"byte_end":15840,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15845,"byte_end":15871,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15876,"byte_end":15879,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15884,"byte_end":15955,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":15960,"byte_end":16035,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16040,"byte_end":16094,"line_start":310,"line_end":310,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16099,"byte_end":16102,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16107,"byte_end":16181,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16186,"byte_end":16254,"line_start":313,"line_end":313,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17106,"byte_end":17113,"line_start":340,"line_end":340,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16412,"byte_end":16478,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16483,"byte_end":16486,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16491,"byte_end":16566,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16571,"byte_end":16644,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16649,"byte_end":16718,"line_start":326,"line_end":326,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16723,"byte_end":16773,"line_start":327,"line_end":327,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16778,"byte_end":16781,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16786,"byte_end":16800,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16805,"byte_end":16808,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16813,"byte_end":16820,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16825,"byte_end":16866,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16871,"byte_end":16906,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16911,"byte_end":16914,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16919,"byte_end":16948,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":16953,"byte_end":17031,"line_start":336,"line_end":336,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17036,"byte_end":17072,"line_start":337,"line_end":337,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17077,"byte_end":17086,"line_start":338,"line_end":338,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":17091,"byte_end":17098,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22021,"byte_end":22031,"line_start":486,"line_end":486,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21888,"byte_end":21937,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":21942,"byte_end":22013,"line_start":485,"line_end":485,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22270,"byte_end":22281,"line_start":495,"line_end":495,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22134,"byte_end":22183,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22188,"byte_end":22262,"line_start":494,"line_end":494,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22463,"byte_end":22473,"line_start":503,"line_end":503,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22386,"byte_end":22455,"line_start":502,"line_end":502,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23869,"byte_end":23881,"line_start":541,"line_end":541,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22609,"byte_end":22681,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22686,"byte_end":22749,"line_start":511,"line_end":511,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22754,"byte_end":22757,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22762,"byte_end":22828,"line_start":513,"line_end":513,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22833,"byte_end":22836,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22841,"byte_end":22914,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22919,"byte_end":22988,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":22993,"byte_end":23063,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23068,"byte_end":23071,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23076,"byte_end":23090,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23095,"byte_end":23098,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23103,"byte_end":23110,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23115,"byte_end":23145,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23150,"byte_end":23200,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23205,"byte_end":23244,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23249,"byte_end":23300,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23305,"byte_end":23308,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23313,"byte_end":23373,"line_start":527,"line_end":527,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23378,"byte_end":23430,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23435,"byte_end":23442,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23447,"byte_end":23450,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23455,"byte_end":23524,"line_start":531,"line_end":531,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23529,"byte_end":23602,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23607,"byte_end":23639,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23644,"byte_end":23647,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23652,"byte_end":23659,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23664,"byte_end":23711,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23716,"byte_end":23755,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23760,"byte_end":23763,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23768,"byte_end":23849,"line_start":539,"line_end":539,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":23854,"byte_end":23861,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3410},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58104,"byte_end":58111,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::try_future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3414}],"decl_id":null,"docs":" Future for the [`and_then`](super::TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`and_then`](super::TryFutureExt::and_then) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":57937,"byte_end":58007,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58025,"byte_end":58092,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3423},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59667,"byte_end":59674,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::future::try_future::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3426},{"krate":0,"index":3427}],"decl_id":null,"docs":" Future for the [`err_into`](super::TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`err_into`](super::TryFutureExt::err_into) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59500,"byte_end":59570,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59588,"byte_end":59655,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3435},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60860,"byte_end":60869,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::future::try_future::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60689,"byte_end":60763,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60781,"byte_end":60848,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62198,"byte_end":62208,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::future::try_future::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62025,"byte_end":62101,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62119,"byte_end":62186,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63533,"byte_end":63543,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3465}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::TryFutureExt::into_future) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63360,"byte_end":63436,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63454,"byte_end":63521,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3472},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64477,"byte_end":64483,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::try_future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476}],"decl_id":null,"docs":" Future for the [`map_err`](super::TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_err`](super::TryFutureExt::map_err) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64312,"byte_end":64380,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64398,"byte_end":64465,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65875,"byte_end":65880,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::future::try_future::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":3489},{"krate":0,"index":3490}],"decl_id":null,"docs":" Future for the [`map_ok`](super::TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok`](super::TryFutureExt::map_ok) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65712,"byte_end":65778,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65796,"byte_end":65863,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3500},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67287,"byte_end":67298,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"MapOkOrElse","qualname":"::future::try_future::map_ok_or_else::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](super::TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok_or_else`](super::TryFutureExt::map_ok_or_else) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67108,"byte_end":67190,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67208,"byte_end":67275,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69052,"byte_end":69058,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::try_future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3523}],"decl_id":null,"docs":" Future for the [`or_else`](super::TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`or_else`](super::TryFutureExt::or_else) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":68887,"byte_end":68955,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":68973,"byte_end":69040,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70709,"byte_end":70725,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"TryFlattenStream","qualname":"::future::try_future::try_flatten_stream::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":620}],"decl_id":null,"docs":" Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70558,"byte_end":70648,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70649,"byte_end":70697,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73031,"byte_end":73043,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"UnwrapOrElse","qualname":"::future::try_future::unwrap_or_else::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":3538},{"krate":0,"index":3539}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":72848,"byte_end":72922,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":72923,"byte_end":72934,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":72952,"byte_end":73019,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":735},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42204,"byte_end":42216,"line_start":80,"line_end":80,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42140,"byte_end":42193,"line_start":79,"line_end":79,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44874,"byte_end":44880,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43502,"byte_end":43560,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43565,"byte_end":43568,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43573,"byte_end":43648,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43653,"byte_end":43723,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43728,"byte_end":43801,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43806,"byte_end":43835,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43840,"byte_end":43843,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43848,"byte_end":43923,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":43928,"byte_end":44003,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44008,"byte_end":44055,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44060,"byte_end":44063,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44068,"byte_end":44143,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44148,"byte_end":44174,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44179,"byte_end":44182,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44187,"byte_end":44201,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44206,"byte_end":44209,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44214,"byte_end":44221,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44226,"byte_end":44264,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44269,"byte_end":44272,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44277,"byte_end":44318,"line_start":140,"line_end":140,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44323,"byte_end":44368,"line_start":141,"line_end":141,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44373,"byte_end":44415,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44420,"byte_end":44456,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44461,"byte_end":44470,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44475,"byte_end":44482,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44487,"byte_end":44490,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44495,"byte_end":44567,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44572,"byte_end":44583,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44588,"byte_end":44591,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44596,"byte_end":44603,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44608,"byte_end":44646,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44651,"byte_end":44654,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44659,"byte_end":44700,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44705,"byte_end":44751,"line_start":154,"line_end":154,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44756,"byte_end":44798,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44803,"byte_end":44840,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44845,"byte_end":44854,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":44859,"byte_end":44866,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46398,"byte_end":46412,"line_start":199,"line_end":199,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45027,"byte_end":45144,"line_start":167,"line_end":167,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45149,"byte_end":45152,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45157,"byte_end":45279,"line_start":169,"line_end":169,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45284,"byte_end":45334,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45339,"byte_end":45342,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45347,"byte_end":45422,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45427,"byte_end":45502,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45507,"byte_end":45554,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45559,"byte_end":45563,"line_start":175,"line_end":175,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45568,"byte_end":45643,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45648,"byte_end":45723,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45728,"byte_end":45775,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45780,"byte_end":45783,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45788,"byte_end":45863,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45868,"byte_end":45894,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45899,"byte_end":45902,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45907,"byte_end":45921,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45926,"byte_end":45929,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45934,"byte_end":45941,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45946,"byte_end":45984,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45989,"byte_end":45992,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":45997,"byte_end":46038,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46043,"byte_end":46088,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46093,"byte_end":46154,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46159,"byte_end":46191,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46196,"byte_end":46200,"line_start":192,"line_end":192,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46205,"byte_end":46251,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46256,"byte_end":46317,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46322,"byte_end":46355,"line_start":195,"line_end":195,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46360,"byte_end":46369,"line_start":196,"line_end":196,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46374,"byte_end":46381,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46386,"byte_end":46390,"line_start":198,"line_end":198,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48072,"byte_end":48079,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46623,"byte_end":46679,"line_start":208,"line_end":208,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46684,"byte_end":46687,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46692,"byte_end":46766,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46771,"byte_end":46832,"line_start":211,"line_end":211,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46837,"byte_end":46907,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46912,"byte_end":46987,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":46992,"byte_end":47027,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47032,"byte_end":47035,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47040,"byte_end":47115,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47120,"byte_end":47195,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47200,"byte_end":47247,"line_start":218,"line_end":218,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47252,"byte_end":47255,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47260,"byte_end":47335,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47340,"byte_end":47366,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47371,"byte_end":47374,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47379,"byte_end":47393,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47398,"byte_end":47401,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47406,"byte_end":47413,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47418,"byte_end":47456,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47461,"byte_end":47464,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47469,"byte_end":47510,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47515,"byte_end":47561,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47566,"byte_end":47609,"line_start":230,"line_end":230,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47614,"byte_end":47651,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47656,"byte_end":47665,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47670,"byte_end":47677,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47682,"byte_end":47685,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47690,"byte_end":47763,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47768,"byte_end":47782,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47787,"byte_end":47790,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47795,"byte_end":47802,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47807,"byte_end":47845,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47850,"byte_end":47853,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47858,"byte_end":47899,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47904,"byte_end":47949,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":47954,"byte_end":47997,"line_start":243,"line_end":243,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48002,"byte_end":48038,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48043,"byte_end":48052,"line_start":245,"line_end":245,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48057,"byte_end":48064,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49128,"byte_end":49136,"line_start":277,"line_end":277,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48231,"byte_end":48301,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48306,"byte_end":48355,"line_start":256,"line_end":256,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48360,"byte_end":48363,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48368,"byte_end":48431,"line_start":258,"line_end":258,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48436,"byte_end":48504,"line_start":259,"line_end":259,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48509,"byte_end":48582,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48587,"byte_end":48663,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48668,"byte_end":48713,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48718,"byte_end":48721,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48726,"byte_end":48801,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48806,"byte_end":48832,"line_start":265,"line_end":265,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48837,"byte_end":48840,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48845,"byte_end":48859,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48864,"byte_end":48867,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48872,"byte_end":48879,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48884,"byte_end":48922,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48927,"byte_end":48930,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48935,"byte_end":48976,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":48981,"byte_end":49032,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49037,"byte_end":49094,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49099,"byte_end":49108,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49113,"byte_end":49120,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50652,"byte_end":50660,"line_start":321,"line_end":321,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49271,"byte_end":49340,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49345,"byte_end":49419,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49424,"byte_end":49427,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49432,"byte_end":49507,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49512,"byte_end":49582,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49587,"byte_end":49652,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49657,"byte_end":49723,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49728,"byte_end":49762,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49767,"byte_end":49770,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49775,"byte_end":49850,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49855,"byte_end":49881,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49886,"byte_end":49889,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49894,"byte_end":49908,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49913,"byte_end":49916,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49921,"byte_end":49928,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49933,"byte_end":49971,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49976,"byte_end":49979,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":49984,"byte_end":50025,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50030,"byte_end":50075,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50080,"byte_end":50155,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50160,"byte_end":50196,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50201,"byte_end":50210,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50215,"byte_end":50222,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50227,"byte_end":50230,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50235,"byte_end":50311,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50316,"byte_end":50327,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50332,"byte_end":50335,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50340,"byte_end":50347,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50352,"byte_end":50390,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50395,"byte_end":50398,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50403,"byte_end":50444,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50449,"byte_end":50495,"line_start":316,"line_end":316,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50500,"byte_end":50576,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50581,"byte_end":50618,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50623,"byte_end":50632,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50637,"byte_end":50644,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52232,"byte_end":52239,"line_start":366,"line_end":366,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50865,"byte_end":50930,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":50935,"byte_end":51007,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51012,"byte_end":51015,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51020,"byte_end":51095,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51100,"byte_end":51170,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51175,"byte_end":51240,"line_start":335,"line_end":335,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51245,"byte_end":51321,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51326,"byte_end":51344,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51349,"byte_end":51352,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51357,"byte_end":51432,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51437,"byte_end":51463,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51468,"byte_end":51471,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51476,"byte_end":51490,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51495,"byte_end":51498,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51503,"byte_end":51510,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51515,"byte_end":51553,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51558,"byte_end":51561,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51566,"byte_end":51607,"line_start":347,"line_end":347,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51612,"byte_end":51658,"line_start":348,"line_end":348,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51663,"byte_end":51738,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51743,"byte_end":51780,"line_start":350,"line_end":350,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51785,"byte_end":51794,"line_start":351,"line_end":351,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51799,"byte_end":51806,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51811,"byte_end":51814,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51819,"byte_end":51892,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51897,"byte_end":51911,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51916,"byte_end":51919,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51924,"byte_end":51931,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51936,"byte_end":51974,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51979,"byte_end":51982,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":51987,"byte_end":52028,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52033,"byte_end":52078,"line_start":361,"line_end":361,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52083,"byte_end":52157,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52162,"byte_end":52198,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52203,"byte_end":52212,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52217,"byte_end":52224,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53166,"byte_end":53176,"line_start":393,"line_end":393,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52439,"byte_end":52512,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52517,"byte_end":52520,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52525,"byte_end":52600,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52605,"byte_end":52678,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52683,"byte_end":52752,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52757,"byte_end":52810,"line_start":380,"line_end":380,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52815,"byte_end":52818,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52823,"byte_end":52837,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52842,"byte_end":52845,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52850,"byte_end":52857,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52862,"byte_end":52903,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52908,"byte_end":52946,"line_start":386,"line_end":386,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52951,"byte_end":52954,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":52959,"byte_end":53001,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53006,"byte_end":53087,"line_start":389,"line_end":389,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53092,"byte_end":53132,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53137,"byte_end":53146,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53151,"byte_end":53158,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54051,"byte_end":54062,"line_start":419,"line_end":419,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53324,"byte_end":53395,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53400,"byte_end":53403,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53408,"byte_end":53483,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53488,"byte_end":53561,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53566,"byte_end":53635,"line_start":405,"line_end":405,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53640,"byte_end":53694,"line_start":406,"line_end":406,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53699,"byte_end":53702,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53707,"byte_end":53721,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53726,"byte_end":53729,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53734,"byte_end":53741,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53746,"byte_end":53787,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53792,"byte_end":53830,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53835,"byte_end":53838,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53843,"byte_end":53886,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53891,"byte_end":53971,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":53976,"byte_end":54017,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54022,"byte_end":54031,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54036,"byte_end":54043,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55159,"byte_end":55177,"line_start":452,"line_end":452,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54215,"byte_end":54290,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54295,"byte_end":54318,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54323,"byte_end":54326,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54331,"byte_end":54403,"line_start":430,"line_end":430,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54408,"byte_end":54481,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54486,"byte_end":54500,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54505,"byte_end":54508,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54513,"byte_end":54583,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54588,"byte_end":54606,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54611,"byte_end":54614,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54619,"byte_end":54633,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54638,"byte_end":54641,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54646,"byte_end":54653,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54658,"byte_end":54699,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54704,"byte_end":54742,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54747,"byte_end":54793,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54798,"byte_end":54801,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54806,"byte_end":54866,"line_start":444,"line_end":444,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54871,"byte_end":54950,"line_start":445,"line_end":445,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54955,"byte_end":54958,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":54963,"byte_end":55020,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55025,"byte_end":55077,"line_start":448,"line_end":448,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55082,"byte_end":55125,"line_start":449,"line_end":449,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55130,"byte_end":55139,"line_start":450,"line_end":450,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55144,"byte_end":55151,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56174,"byte_end":56188,"line_start":482,"line_end":482,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55344,"byte_end":55414,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55419,"byte_end":55456,"line_start":461,"line_end":461,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55461,"byte_end":55510,"line_start":462,"line_end":462,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55515,"byte_end":55518,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55523,"byte_end":55592,"line_start":464,"line_end":464,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55597,"byte_end":55670,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55675,"byte_end":55745,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55750,"byte_end":55768,"line_start":467,"line_end":467,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55773,"byte_end":55776,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55781,"byte_end":55849,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55854,"byte_end":55857,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55862,"byte_end":55876,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55881,"byte_end":55884,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55889,"byte_end":55896,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55901,"byte_end":55939,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55944,"byte_end":55947,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55952,"byte_end":55993,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":55998,"byte_end":56050,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56055,"byte_end":56102,"line_start":478,"line_end":478,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56107,"byte_end":56140,"line_start":479,"line_end":479,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56145,"byte_end":56154,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56159,"byte_end":56166,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57358,"byte_end":57369,"line_start":521,"line_end":521,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56657,"byte_end":56710,"line_start":500,"line_end":500,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56715,"byte_end":56751,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56756,"byte_end":56759,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56764,"byte_end":56813,"line_start":503,"line_end":503,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56818,"byte_end":56885,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56890,"byte_end":56903,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56908,"byte_end":56911,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56916,"byte_end":56930,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56935,"byte_end":56938,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56943,"byte_end":56950,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":56955,"byte_end":57014,"line_start":510,"line_end":510,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57019,"byte_end":57022,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57027,"byte_end":57046,"line_start":512,"line_end":512,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57051,"byte_end":57069,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57074,"byte_end":57146,"line_start":514,"line_end":514,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57151,"byte_end":57183,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57188,"byte_end":57195,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57200,"byte_end":57276,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57281,"byte_end":57284,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57289,"byte_end":57338,"line_start":519,"line_end":519,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57343,"byte_end":57350,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57577,"byte_end":57591,"line_start":530,"line_end":530,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57474,"byte_end":57547,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":57552,"byte_end":57569,"line_start":529,"line_end":529,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83139,"byte_end":83143,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":3587}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83005,"byte_end":83042,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83060,"byte_end":83127,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83684,"byte_end":83688,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83247,"byte_end":83315,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83316,"byte_end":83319,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83320,"byte_end":83383,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83384,"byte_end":83387,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83388,"byte_end":83402,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83403,"byte_end":83406,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83407,"byte_end":83414,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83415,"byte_end":83456,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83457,"byte_end":83481,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83482,"byte_end":83485,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83486,"byte_end":83518,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83519,"byte_end":83546,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83547,"byte_end":83550,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83551,"byte_end":83588,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83589,"byte_end":83613,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83614,"byte_end":83621,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83622,"byte_end":83658,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83659,"byte_end":83668,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83669,"byte_end":83676,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3591},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84424,"byte_end":84431,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3593}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84285,"byte_end":84327,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84345,"byte_end":84412,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84950,"byte_end":84957,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84572,"byte_end":84652,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84653,"byte_end":84666,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84667,"byte_end":84670,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84671,"byte_end":84733,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84734,"byte_end":84737,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84738,"byte_end":84752,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84753,"byte_end":84756,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84757,"byte_end":84770,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84771,"byte_end":84812,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84813,"byte_end":84837,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84838,"byte_end":84841,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84842,"byte_end":84877,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84878,"byte_end":84904,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84905,"byte_end":84924,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84925,"byte_end":84934,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84935,"byte_end":84942,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85669,"byte_end":85675,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85634,"byte_end":85664,"line_start":13,"line_end":13,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85729,"byte_end":85733,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85686,"byte_end":85724,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3605},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85895,"byte_end":85899,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85752,"byte_end":85818,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85823,"byte_end":85890,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3597},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85605,"byte_end":85614,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85483,"byte_end":85520,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85521,"byte_end":85524,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85525,"byte_end":85578,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86478,"byte_end":86488,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86017,"byte_end":86054,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86055,"byte_end":86058,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86059,"byte_end":86073,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86074,"byte_end":86077,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86078,"byte_end":86085,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86086,"byte_end":86127,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86128,"byte_end":86152,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86153,"byte_end":86178,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86179,"byte_end":86182,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86183,"byte_end":86232,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86233,"byte_end":86254,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86255,"byte_end":86307,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86308,"byte_end":86343,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86344,"byte_end":86399,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86400,"byte_end":86452,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86453,"byte_end":86462,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86463,"byte_end":86470,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86905,"byte_end":86915,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86607,"byte_end":86692,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86697,"byte_end":86768,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86773,"byte_end":86846,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86851,"byte_end":86879,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86884,"byte_end":86893,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87292,"byte_end":87303,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87172,"byte_end":87238,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87243,"byte_end":87266,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87271,"byte_end":87280,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3610},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89293,"byte_end":89305,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":3612}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"/ A future representing a value which may or may not be present.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88752,"byte_end":88818,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88819,"byte_end":88822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Created by the [`From`] implementation for [`Option`](std::option::Option).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88823,"byte_end":88902,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88903,"byte_end":88906,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88907,"byte_end":88921,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88922,"byte_end":88925,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88926,"byte_end":88933,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88934,"byte_end":88975,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ use futures::future::OptionFuture;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":88976,"byte_end":89014,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89015,"byte_end":89018,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut a: OptionFuture<_> = Some(async { 123 }).into();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89019,"byte_end":89079,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(a.await, Some(123));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89080,"byte_end":89115,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89116,"byte_end":89119,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ a = None.into();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89120,"byte_end":89140,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(a.await, None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89141,"byte_end":89171,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89172,"byte_end":89181,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89182,"byte_end":89189,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89214,"byte_end":89281,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90356,"byte_end":90362,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":884}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90236,"byte_end":90276,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90277,"byte_end":90344,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":887},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90949,"byte_end":90956,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90413,"byte_end":90484,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90485,"byte_end":90488,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90489,"byte_end":90555,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90556,"byte_end":90559,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90560,"byte_end":90574,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90575,"byte_end":90578,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90579,"byte_end":90586,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90587,"byte_end":90628,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90629,"byte_end":90662,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90663,"byte_end":90702,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90703,"byte_end":90706,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90707,"byte_end":90764,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90765,"byte_end":90808,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90809,"byte_end":90814,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90815,"byte_end":90818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90819,"byte_end":90860,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90861,"byte_end":90923,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90924,"byte_end":90933,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90934,"byte_end":90941,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3622},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91676,"byte_end":91681,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91525,"byte_end":91572,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91597,"byte_end":91664,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91804,"byte_end":91814,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91721,"byte_end":91778,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91783,"byte_end":91792,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92449,"byte_end":92454,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92203,"byte_end":92263,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92264,"byte_end":92267,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92268,"byte_end":92282,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92283,"byte_end":92286,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92287,"byte_end":92294,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92295,"byte_end":92336,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92337,"byte_end":92361,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92362,"byte_end":92365,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92366,"byte_end":92395,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92396,"byte_end":92423,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92424,"byte_end":92433,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92434,"byte_end":92441,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92766,"byte_end":92768,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92500,"byte_end":92567,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92568,"byte_end":92571,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92572,"byte_end":92586,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92587,"byte_end":92590,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92591,"byte_end":92598,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92599,"byte_end":92640,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92641,"byte_end":92665,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92666,"byte_end":92669,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92670,"byte_end":92708,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92709,"byte_end":92740,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92741,"byte_end":92750,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92751,"byte_end":92758,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93099,"byte_end":93102,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92832,"byte_end":92898,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92899,"byte_end":92902,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92903,"byte_end":92917,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92918,"byte_end":92921,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92922,"byte_end":92929,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92930,"byte_end":92971,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92972,"byte_end":92996,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92997,"byte_end":93000,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93001,"byte_end":93040,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93041,"byte_end":93073,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93074,"byte_end":93083,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":93084,"byte_end":93091,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3632},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95382,"byte_end":95386,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95452,"byte_end":95457,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3682},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95529,"byte_end":95534,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":3687},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3716},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95612,"byte_end":95617,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":93566,"byte_end":93633,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96232,"byte_end":96236,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95655,"byte_end":95726,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95727,"byte_end":95730,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95731,"byte_end":95802,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95803,"byte_end":95878,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95879,"byte_end":95882,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95883,"byte_end":95952,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95953,"byte_end":95979,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95980,"byte_end":95983,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95984,"byte_end":95998,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":95999,"byte_end":96002,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96003,"byte_end":96010,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96011,"byte_end":96052,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96053,"byte_end":96077,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96078,"byte_end":96081,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96082,"byte_end":96106,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96107,"byte_end":96131,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96132,"byte_end":96166,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96167,"byte_end":96170,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96171,"byte_end":96206,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96207,"byte_end":96216,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96217,"byte_end":96224,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":952},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96782,"byte_end":96787,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96443,"byte_end":96495,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96496,"byte_end":96499,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96500,"byte_end":96514,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96515,"byte_end":96518,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96519,"byte_end":96526,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96527,"byte_end":96568,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96569,"byte_end":96593,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96594,"byte_end":96597,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96598,"byte_end":96622,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96623,"byte_end":96647,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96648,"byte_end":96672,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96673,"byte_end":96712,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96713,"byte_end":96716,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96717,"byte_end":96756,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96757,"byte_end":96766,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":96767,"byte_end":96774,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97370,"byte_end":97375,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97000,"byte_end":97052,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97053,"byte_end":97056,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97057,"byte_end":97071,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97072,"byte_end":97075,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97076,"byte_end":97083,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97084,"byte_end":97125,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97126,"byte_end":97150,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97151,"byte_end":97154,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97155,"byte_end":97179,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97180,"byte_end":97204,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97205,"byte_end":97229,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97230,"byte_end":97254,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97255,"byte_end":97297,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97298,"byte_end":97301,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97302,"byte_end":97344,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97345,"byte_end":97354,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97355,"byte_end":97362,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":961},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":98047,"byte_end":98052,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97646,"byte_end":97698,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97699,"byte_end":97702,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97703,"byte_end":97717,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97718,"byte_end":97721,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97722,"byte_end":97729,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97730,"byte_end":97771,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97772,"byte_end":97796,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97797,"byte_end":97800,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97801,"byte_end":97825,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97826,"byte_end":97850,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97851,"byte_end":97875,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97876,"byte_end":97900,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97901,"byte_end":97925,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97926,"byte_end":97971,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97972,"byte_end":97975,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":97976,"byte_end":98021,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":98022,"byte_end":98031,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/join.rs","byte_start":98032,"byte_end":98039,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3798},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98670,"byte_end":98676,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":3801}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98532,"byte_end":98573,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98574,"byte_end":98641,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99945,"byte_end":99951,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98767,"byte_end":98837,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98838,"byte_end":98841,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98842,"byte_end":98920,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98921,"byte_end":98997,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98998,"byte_end":99070,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99071,"byte_end":99074,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99075,"byte_end":99147,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99148,"byte_end":99176,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99177,"byte_end":99180,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99181,"byte_end":99248,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99249,"byte_end":99313,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99314,"byte_end":99364,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99365,"byte_end":99368,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99369,"byte_end":99383,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99384,"byte_end":99387,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99388,"byte_end":99395,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99396,"byte_end":99455,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99456,"byte_end":99459,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99460,"byte_end":99513,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99514,"byte_end":99517,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99518,"byte_end":99596,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99597,"byte_end":99629,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99630,"byte_end":99662,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99663,"byte_end":99668,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99669,"byte_end":99713,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99714,"byte_end":99740,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99741,"byte_end":99818,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99819,"byte_end":99898,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99899,"byte_end":99912,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99913,"byte_end":99923,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99924,"byte_end":99929,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":99930,"byte_end":99937,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3806},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104557,"byte_end":104564,"line_start":106,"line_end":106,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":3809},{"krate":0,"index":3810}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104634,"byte_end":104642,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3847},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104718,"byte_end":104726,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3875},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104808,"byte_end":104816,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":101370,"byte_end":101437,"line_start":16,"line_end":16,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106088,"byte_end":106096,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104854,"byte_end":104927,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104928,"byte_end":104960,"line_start":119,"line_end":119,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104961,"byte_end":104964,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":104965,"byte_end":105036,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105037,"byte_end":105113,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105114,"byte_end":105185,"line_start":123,"line_end":123,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105186,"byte_end":105202,"line_start":124,"line_end":124,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105203,"byte_end":105206,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105207,"byte_end":105276,"line_start":126,"line_end":126,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105277,"byte_end":105303,"line_start":127,"line_end":127,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105304,"byte_end":105307,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105308,"byte_end":105322,"line_start":129,"line_end":129,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105323,"byte_end":105326,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105327,"byte_end":105403,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105404,"byte_end":105440,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105441,"byte_end":105444,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105445,"byte_end":105452,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105453,"byte_end":105494,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105495,"byte_end":105519,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105520,"byte_end":105523,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105524,"byte_end":105569,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105570,"byte_end":105615,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105616,"byte_end":105654,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105655,"byte_end":105658,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105659,"byte_end":105698,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105699,"byte_end":105708,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105709,"byte_end":105716,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105717,"byte_end":105720,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105721,"byte_end":105791,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105792,"byte_end":105807,"line_start":147,"line_end":147,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105808,"byte_end":105811,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105812,"byte_end":105819,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105820,"byte_end":105861,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105862,"byte_end":105886,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105887,"byte_end":105890,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105891,"byte_end":105936,"line_start":153,"line_end":153,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105937,"byte_end":105983,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":105984,"byte_end":106022,"line_start":155,"line_end":155,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106023,"byte_end":106026,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106027,"byte_end":106062,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106063,"byte_end":106072,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106073,"byte_end":106080,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1024},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106689,"byte_end":106698,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106271,"byte_end":106331,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106332,"byte_end":106335,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106336,"byte_end":106350,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106351,"byte_end":106354,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106355,"byte_end":106362,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106363,"byte_end":106404,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106405,"byte_end":106429,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106430,"byte_end":106433,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106434,"byte_end":106479,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106480,"byte_end":106525,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106526,"byte_end":106571,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106572,"byte_end":106615,"line_start":179,"line_end":179,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106616,"byte_end":106619,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106620,"byte_end":106663,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106664,"byte_end":106673,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106674,"byte_end":106681,"line_start":183,"line_end":183,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1028},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107438,"byte_end":107447,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":106968,"byte_end":107028,"line_start":197,"line_end":197,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107029,"byte_end":107032,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107033,"byte_end":107047,"line_start":199,"line_end":199,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107048,"byte_end":107051,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107052,"byte_end":107059,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107060,"byte_end":107101,"line_start":202,"line_end":202,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107102,"byte_end":107126,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107127,"byte_end":107130,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107131,"byte_end":107176,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107177,"byte_end":107222,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107223,"byte_end":107268,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107269,"byte_end":107314,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107315,"byte_end":107361,"line_start":209,"line_end":209,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107362,"byte_end":107365,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107366,"byte_end":107412,"line_start":211,"line_end":211,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107413,"byte_end":107422,"line_start":212,"line_end":212,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107423,"byte_end":107430,"line_start":213,"line_end":213,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1033},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108321,"byte_end":108330,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107799,"byte_end":107859,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107860,"byte_end":107863,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107864,"byte_end":107878,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107879,"byte_end":107882,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107883,"byte_end":107890,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107891,"byte_end":107932,"line_start":234,"line_end":234,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107933,"byte_end":107957,"line_start":235,"line_end":235,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107958,"byte_end":107961,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":107962,"byte_end":108007,"line_start":237,"line_end":237,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108008,"byte_end":108053,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108054,"byte_end":108099,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108100,"byte_end":108145,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108146,"byte_end":108191,"line_start":241,"line_end":241,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108192,"byte_end":108241,"line_start":242,"line_end":242,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108242,"byte_end":108245,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108246,"byte_end":108295,"line_start":244,"line_end":244,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108296,"byte_end":108305,"line_start":245,"line_end":245,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_join.rs","byte_start":108306,"byte_end":108313,"line_start":246,"line_end":246,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109058,"byte_end":109067,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":3953}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":108916,"byte_end":108961,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":108962,"byte_end":109029,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1062},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110652,"byte_end":110662,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109161,"byte_end":109231,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109232,"byte_end":109235,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109236,"byte_end":109314,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109315,"byte_end":109391,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109392,"byte_end":109464,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109465,"byte_end":109468,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109469,"byte_end":109541,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109542,"byte_end":109570,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109571,"byte_end":109574,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109575,"byte_end":109642,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109643,"byte_end":109714,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109715,"byte_end":109765,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109766,"byte_end":109769,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109770,"byte_end":109784,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109785,"byte_end":109788,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109789,"byte_end":109796,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109797,"byte_end":109881,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109882,"byte_end":109885,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109886,"byte_end":109943,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109944,"byte_end":109947,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109948,"byte_end":110030,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110031,"byte_end":110088,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110089,"byte_end":110146,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110147,"byte_end":110173,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110174,"byte_end":110179,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110180,"byte_end":110275,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110276,"byte_end":110299,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110300,"byte_end":110380,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110381,"byte_end":110462,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110463,"byte_end":110533,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110534,"byte_end":110605,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110606,"byte_end":110619,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110620,"byte_end":110630,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110631,"byte_end":110636,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110637,"byte_end":110644,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3961},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112201,"byte_end":112205,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112168,"byte_end":112196,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112248,"byte_end":112253,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":3958},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112214,"byte_end":112243,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3958},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112149,"byte_end":112155,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3964}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112005,"byte_end":112105,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112106,"byte_end":112115,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112452,"byte_end":112464,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112304,"byte_end":112362,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112367,"byte_end":112370,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112375,"byte_end":112440,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112844,"byte_end":112857,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112695,"byte_end":112753,"line_start":31,"line_end":31,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112758,"byte_end":112761,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112766,"byte_end":112832,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113145,"byte_end":113155,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113072,"byte_end":113133,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1122},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1127},{"krate":0,"index":2138},{"krate":0,"index":2164},{"krate":0,"index":3007},{"krate":0,"index":3028},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3066},{"krate":0,"index":3069},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3260}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":120919,"byte_end":120930,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":120931,"byte_end":120934,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":120935,"byte_end":121009,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121010,"byte_end":121088,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/mod.rs","byte_start":121089,"byte_end":121118,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3975},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165325,"byte_end":165330,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chain`](super::StreamExt::chain) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165186,"byte_end":165247,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165265,"byte_end":165313,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167488,"byte_end":167495,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`collect`](super::StreamExt::collect) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167326,"byte_end":167391,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167409,"byte_end":167476,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4004},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":168984,"byte_end":168990,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`concat`](super::StreamExt::concat) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":168824,"byte_end":168887,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":168905,"byte_end":168972,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4016},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170874,"byte_end":170883,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`enumerate`](super::StreamExt::enumerate) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170727,"byte_end":170796,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170814,"byte_end":170862,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171316,"byte_end":171323,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171209,"byte_end":171282,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171287,"byte_end":171304,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171633,"byte_end":171640,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171372,"byte_end":171439,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171444,"byte_end":171475,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171480,"byte_end":171483,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171488,"byte_end":171561,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171566,"byte_end":171621,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171969,"byte_end":171980,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Enumerate<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171701,"byte_end":171775,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171780,"byte_end":171811,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171816,"byte_end":171819,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171824,"byte_end":171897,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":171902,"byte_end":171957,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172289,"byte_end":172299,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172054,"byte_end":172116,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172121,"byte_end":172124,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172129,"byte_end":172201,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172206,"byte_end":172277,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1264},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173677,"byte_end":173683,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter`](super::StreamExt::filter) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173553,"byte_end":173616,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173617,"byte_end":173665,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174916,"byte_end":174923,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174809,"byte_end":174882,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174887,"byte_end":174904,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175233,"byte_end":175240,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174972,"byte_end":175039,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175044,"byte_end":175075,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175080,"byte_end":175083,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175088,"byte_end":175161,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175166,"byte_end":175221,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175569,"byte_end":175580,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Filter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175301,"byte_end":175375,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175380,"byte_end":175411,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175416,"byte_end":175419,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175424,"byte_end":175497,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175502,"byte_end":175557,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175889,"byte_end":175899,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175654,"byte_end":175716,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175721,"byte_end":175724,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175729,"byte_end":175801,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175806,"byte_end":175877,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178349,"byte_end":178358,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter_map`](super::StreamExt::filter_map) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178217,"byte_end":178288,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178289,"byte_end":178337,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179297,"byte_end":179304,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179190,"byte_end":179263,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179268,"byte_end":179285,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179614,"byte_end":179621,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179353,"byte_end":179420,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179425,"byte_end":179456,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179461,"byte_end":179464,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179469,"byte_end":179542,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179547,"byte_end":179602,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179950,"byte_end":179961,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179682,"byte_end":179756,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179761,"byte_end":179792,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179797,"byte_end":179800,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179805,"byte_end":179878,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":179883,"byte_end":179938,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180270,"byte_end":180280,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180035,"byte_end":180097,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180102,"byte_end":180105,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180110,"byte_end":180182,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180187,"byte_end":180258,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4046},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182502,"byte_end":182509,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten`](super::StreamExt::flatten) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182359,"byte_end":182424,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182442,"byte_end":182490,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183061,"byte_end":183068,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182954,"byte_end":183027,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183032,"byte_end":183049,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183378,"byte_end":183385,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183117,"byte_end":183184,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183189,"byte_end":183220,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183225,"byte_end":183228,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183233,"byte_end":183306,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183311,"byte_end":183366,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183714,"byte_end":183725,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Flatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183446,"byte_end":183520,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183525,"byte_end":183556,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183561,"byte_end":183564,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183569,"byte_end":183642,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183647,"byte_end":183702,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184034,"byte_end":184044,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183799,"byte_end":183861,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183866,"byte_end":183869,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183874,"byte_end":183946,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":183951,"byte_end":184022,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185591,"byte_end":185595,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fold`](super::StreamExt::fold) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185452,"byte_end":185511,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185512,"byte_end":185579,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188240,"byte_end":188247,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each`](super::StreamExt::for_each) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188093,"byte_end":188160,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188161,"byte_end":188228,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4077},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190498,"byte_end":190502,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4079},{"krate":0,"index":4080}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`fuse`](super::StreamExt::fuse) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190361,"byte_end":190420,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190438,"byte_end":190486,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191035,"byte_end":191042,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190766,"byte_end":190828,"line_start":26,"line_end":26,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190833,"byte_end":190836,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190841,"byte_end":190909,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190914,"byte_end":190980,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190985,"byte_end":191023,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191196,"byte_end":191203,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191089,"byte_end":191162,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191167,"byte_end":191184,"line_start":36,"line_end":36,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191513,"byte_end":191520,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191252,"byte_end":191319,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191324,"byte_end":191355,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191360,"byte_end":191363,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191368,"byte_end":191441,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191446,"byte_end":191501,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191849,"byte_end":191860,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fuse<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191581,"byte_end":191655,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191660,"byte_end":191691,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191696,"byte_end":191699,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191704,"byte_end":191777,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191782,"byte_end":191837,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192169,"byte_end":192179,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":191934,"byte_end":191996,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192001,"byte_end":192004,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192009,"byte_end":192081,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192086,"byte_end":192157,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4089},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193509,"byte_end":193521,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":4091}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193339,"byte_end":193412,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193430,"byte_end":193497,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194192,"byte_end":194199,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193800,"byte_end":193873,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193878,"byte_end":193895,"line_start":25,"line_end":25,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193900,"byte_end":193903,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193908,"byte_end":193989,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193994,"byte_end":194076,"line_start":28,"line_end":28,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194081,"byte_end":194160,"line_start":29,"line_end":29,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194165,"byte_end":194180,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194810,"byte_end":194817,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194264,"byte_end":194331,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194336,"byte_end":194367,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194372,"byte_end":194375,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194380,"byte_end":194453,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194458,"byte_end":194513,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194518,"byte_end":194521,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194526,"byte_end":194607,"line_start":41,"line_end":41,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194612,"byte_end":194694,"line_start":42,"line_end":42,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194699,"byte_end":194778,"line_start":43,"line_end":43,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194783,"byte_end":194798,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195443,"byte_end":195454,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194890,"byte_end":194964,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":194969,"byte_end":195000,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195005,"byte_end":195008,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195013,"byte_end":195086,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195091,"byte_end":195146,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195151,"byte_end":195154,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195159,"byte_end":195240,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195245,"byte_end":195327,"line_start":56,"line_end":56,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195332,"byte_end":195411,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195416,"byte_end":195431,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196069,"byte_end":196079,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195549,"byte_end":195611,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195616,"byte_end":195619,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195624,"byte_end":195696,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195701,"byte_end":195772,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195777,"byte_end":195780,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195785,"byte_end":195866,"line_start":68,"line_end":68,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195871,"byte_end":195953,"line_start":69,"line_end":69,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":195958,"byte_end":196037,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196042,"byte_end":196057,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197071,"byte_end":197078,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"decl_id":null,"docs":" Stream for the [`inspect`](super::StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect`](super::StreamExt::inspect) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":196945,"byte_end":197010,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197011,"byte_end":197059,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197757,"byte_end":197764,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197650,"byte_end":197723,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197728,"byte_end":197745,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198074,"byte_end":198081,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197813,"byte_end":197880,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197885,"byte_end":197916,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197921,"byte_end":197924,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197929,"byte_end":198002,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198007,"byte_end":198062,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198410,"byte_end":198421,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Inspect<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198142,"byte_end":198216,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198221,"byte_end":198252,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198257,"byte_end":198260,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198265,"byte_end":198338,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198343,"byte_end":198398,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198730,"byte_end":198740,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198495,"byte_end":198557,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198562,"byte_end":198565,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198570,"byte_end":198642,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198647,"byte_end":198718,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1604},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200187,"byte_end":200190,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map`](super::StreamExt::map) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200069,"byte_end":200126,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200127,"byte_end":200175,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200852,"byte_end":200859,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200745,"byte_end":200818,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200823,"byte_end":200840,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201169,"byte_end":201176,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200908,"byte_end":200975,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200980,"byte_end":201011,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201016,"byte_end":201019,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201024,"byte_end":201097,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201102,"byte_end":201157,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201505,"byte_end":201516,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Map<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201237,"byte_end":201311,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201316,"byte_end":201347,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201352,"byte_end":201355,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201360,"byte_end":201433,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201438,"byte_end":201493,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201825,"byte_end":201835,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201590,"byte_end":201652,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201657,"byte_end":201660,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201665,"byte_end":201737,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201742,"byte_end":201813,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4108},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203127,"byte_end":203131,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4111}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":202971,"byte_end":203030,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203048,"byte_end":203115,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4116},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204137,"byte_end":204151,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":4119}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":203953,"byte_end":204028,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204029,"byte_end":204040,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204058,"byte_end":204125,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4124},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205665,"byte_end":205673,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205373,"byte_end":205420,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205421,"byte_end":205424,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205425,"byte_end":205482,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205483,"byte_end":205540,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205541,"byte_end":205587,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205605,"byte_end":205653,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206174,"byte_end":206181,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Peekable<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206067,"byte_end":206140,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206145,"byte_end":206162,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206500,"byte_end":206507,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Peekable<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206239,"byte_end":206306,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206311,"byte_end":206342,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206347,"byte_end":206350,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206355,"byte_end":206428,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206433,"byte_end":206488,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206841,"byte_end":206852,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Peekable<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206573,"byte_end":206647,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206652,"byte_end":206683,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206688,"byte_end":206691,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206696,"byte_end":206769,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206774,"byte_end":206829,"line_start":56,"line_end":56,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207175,"byte_end":207185,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Peekable<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":206940,"byte_end":207002,"line_start":61,"line_end":61,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207007,"byte_end":207010,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207015,"byte_end":207087,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207092,"byte_end":207163,"line_start":64,"line_end":64,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207399,"byte_end":207403,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207244,"byte_end":207317,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":207322,"byte_end":207387,"line_start":70,"line_end":70,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208745,"byte_end":208754,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208507,"byte_end":208569,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208574,"byte_end":208577,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208582,"byte_end":208655,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":208660,"byte_end":208733,"line_start":102,"line_end":102,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1727},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210237,"byte_end":210241,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":1730}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"/ Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210088,"byte_end":210176,"line_start":153,"line_end":153,"column_start":1,"column_end":89}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210177,"byte_end":210225,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211676,"byte_end":211680,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4138},{"krate":0,"index":4139}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip`](super::StreamExt::skip) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211539,"byte_end":211598,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211616,"byte_end":211664,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212115,"byte_end":212122,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212008,"byte_end":212081,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212086,"byte_end":212103,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212432,"byte_end":212439,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212171,"byte_end":212238,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212243,"byte_end":212274,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212279,"byte_end":212282,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212287,"byte_end":212360,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212365,"byte_end":212420,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212768,"byte_end":212779,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Skip<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212500,"byte_end":212574,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212579,"byte_end":212610,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212615,"byte_end":212618,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212623,"byte_end":212696,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212701,"byte_end":212756,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213088,"byte_end":213098,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212853,"byte_end":212915,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212920,"byte_end":212923,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":212928,"byte_end":213000,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213005,"byte_end":213076,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214700,"byte_end":214709,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip_while`](super::StreamExt::skip_while) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214568,"byte_end":214639,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214640,"byte_end":214688,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216103,"byte_end":216110,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":215996,"byte_end":216069,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216074,"byte_end":216091,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216420,"byte_end":216427,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216159,"byte_end":216226,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216231,"byte_end":216262,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216267,"byte_end":216270,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216275,"byte_end":216348,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216353,"byte_end":216408,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216756,"byte_end":216767,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216488,"byte_end":216562,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216567,"byte_end":216598,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216603,"byte_end":216606,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216611,"byte_end":216684,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216689,"byte_end":216744,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217076,"byte_end":217086,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216841,"byte_end":216903,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216908,"byte_end":216911,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216916,"byte_end":216988,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":216993,"byte_end":217064,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4160},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219658,"byte_end":219662,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4162},{"krate":0,"index":4163}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take`](super::StreamExt::take) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219521,"byte_end":219580,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219598,"byte_end":219646,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220097,"byte_end":220104,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219990,"byte_end":220063,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220068,"byte_end":220085,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220414,"byte_end":220421,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220153,"byte_end":220220,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220225,"byte_end":220256,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220261,"byte_end":220264,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220269,"byte_end":220342,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220347,"byte_end":220402,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220750,"byte_end":220761,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220482,"byte_end":220556,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220561,"byte_end":220592,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220597,"byte_end":220600,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220605,"byte_end":220678,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220683,"byte_end":220738,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221070,"byte_end":221080,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220835,"byte_end":220897,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220902,"byte_end":220905,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220910,"byte_end":220982,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":220987,"byte_end":221058,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1872},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":222882,"byte_end":222891,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take_while`](super::StreamExt::take_while) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":222750,"byte_end":222821,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":222822,"byte_end":222870,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224318,"byte_end":224325,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224211,"byte_end":224284,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224289,"byte_end":224306,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224635,"byte_end":224642,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224374,"byte_end":224441,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224446,"byte_end":224477,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224482,"byte_end":224485,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224490,"byte_end":224563,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224568,"byte_end":224623,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224971,"byte_end":224982,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TakeWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224703,"byte_end":224777,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224782,"byte_end":224813,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224818,"byte_end":224821,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224826,"byte_end":224899,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":224904,"byte_end":224959,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225291,"byte_end":225301,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225056,"byte_end":225118,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225123,"byte_end":225126,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225131,"byte_end":225203,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225208,"byte_end":225279,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227830,"byte_end":227834,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`then`](super::StreamExt::then) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227710,"byte_end":227769,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227770,"byte_end":227818,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228775,"byte_end":228782,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Then<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228668,"byte_end":228741,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228746,"byte_end":228763,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229092,"byte_end":229099,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Then<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228831,"byte_end":228898,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228903,"byte_end":228934,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228939,"byte_end":228942,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228947,"byte_end":229020,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229025,"byte_end":229080,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229428,"byte_end":229439,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Then<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229160,"byte_end":229234,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229239,"byte_end":229270,"line_start":67,"line_end":67,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229275,"byte_end":229278,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229283,"byte_end":229356,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229361,"byte_end":229416,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229748,"byte_end":229758,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Then<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229513,"byte_end":229575,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229580,"byte_end":229583,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229588,"byte_end":229660,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229665,"byte_end":229736,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4192},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":231754,"byte_end":231757,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`zip`](super::StreamExt::zip) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":231619,"byte_end":231676,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":231694,"byte_end":231742,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232696,"byte_end":232703,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232588,"byte_end":232662,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232667,"byte_end":232684,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233059,"byte_end":233066,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232797,"byte_end":232865,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232870,"byte_end":232901,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232906,"byte_end":232909,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232914,"byte_end":232987,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232992,"byte_end":233047,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233441,"byte_end":233452,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233172,"byte_end":233247,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233252,"byte_end":233283,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233288,"byte_end":233291,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233296,"byte_end":233369,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233374,"byte_end":233429,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233958,"byte_end":233968,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233722,"byte_end":233785,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233790,"byte_end":233793,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233798,"byte_end":233870,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":233875,"byte_end":233946,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2026},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236821,"byte_end":236825,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`scan`](super::StreamExt::scan) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236701,"byte_end":236760,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236761,"byte_end":236809,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238330,"byte_end":238337,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Scan<St, S, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238223,"byte_end":238296,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238301,"byte_end":238318,"line_start":71,"line_end":71,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238647,"byte_end":238654,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Scan<St, S, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238386,"byte_end":238453,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238458,"byte_end":238489,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238494,"byte_end":238497,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238502,"byte_end":238575,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238580,"byte_end":238635,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238983,"byte_end":238994,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Scan<St, S, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238715,"byte_end":238789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238794,"byte_end":238825,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238830,"byte_end":238833,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238838,"byte_end":238911,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":238916,"byte_end":238971,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239303,"byte_end":239313,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Scan<St, S, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239068,"byte_end":239130,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239135,"byte_end":239138,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239143,"byte_end":239215,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239220,"byte_end":239291,"line_start":97,"line_end":97,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2082},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128663,"byte_end":128672,"line_start":165,"line_end":165,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2137}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128552,"byte_end":128626,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128627,"byte_end":128652,"line_start":164,"line_end":164,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129582,"byte_end":129586,"line_start":189,"line_end":189,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128687,"byte_end":128753,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128758,"byte_end":128761,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128766,"byte_end":128834,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128839,"byte_end":128914,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128919,"byte_end":128994,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128999,"byte_end":129053,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129058,"byte_end":129133,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129138,"byte_end":129148,"line_start":173,"line_end":173,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129153,"byte_end":129156,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129161,"byte_end":129175,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129180,"byte_end":129183,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129188,"byte_end":129195,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129200,"byte_end":129241,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129246,"byte_end":129289,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129294,"byte_end":129297,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129302,"byte_end":129343,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129348,"byte_end":129351,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129356,"byte_end":129401,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129406,"byte_end":129451,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129456,"byte_end":129501,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129506,"byte_end":129548,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129553,"byte_end":129562,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129567,"byte_end":129574,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130785,"byte_end":130796,"line_start":224,"line_end":224,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129688,"byte_end":129760,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129765,"byte_end":129826,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129831,"byte_end":129834,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129839,"byte_end":129914,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129919,"byte_end":129973,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129978,"byte_end":129981,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":129986,"byte_end":130059,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130064,"byte_end":130126,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130131,"byte_end":130206,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130211,"byte_end":130265,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130270,"byte_end":130345,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130350,"byte_end":130360,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130365,"byte_end":130368,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130373,"byte_end":130387,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130392,"byte_end":130395,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130400,"byte_end":130407,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130412,"byte_end":130453,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130458,"byte_end":130501,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130506,"byte_end":130509,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130514,"byte_end":130551,"line_start":215,"line_end":215,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130556,"byte_end":130559,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130564,"byte_end":130616,"line_start":217,"line_end":217,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130621,"byte_end":130651,"line_start":218,"line_end":218,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130656,"byte_end":130659,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130664,"byte_end":130716,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130721,"byte_end":130751,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130756,"byte_end":130765,"line_start":222,"line_end":222,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130770,"byte_end":130777,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131749,"byte_end":131752,"line_start":254,"line_end":254,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130913,"byte_end":130988,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":130993,"byte_end":131016,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131021,"byte_end":131024,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131029,"byte_end":131101,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131106,"byte_end":131170,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131175,"byte_end":131212,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131217,"byte_end":131220,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131225,"byte_end":131301,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131306,"byte_end":131377,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131382,"byte_end":131403,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131408,"byte_end":131411,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131416,"byte_end":131430,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131435,"byte_end":131438,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131443,"byte_end":131450,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131455,"byte_end":131496,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131501,"byte_end":131544,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131549,"byte_end":131552,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131557,"byte_end":131594,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131599,"byte_end":131638,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131643,"byte_end":131646,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131651,"byte_end":131715,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131720,"byte_end":131729,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131734,"byte_end":131741,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133284,"byte_end":133293,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131896,"byte_end":131967,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131972,"byte_end":131991,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":131996,"byte_end":131999,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132004,"byte_end":132069,"line_start":265,"line_end":265,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132074,"byte_end":132143,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132148,"byte_end":132159,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132164,"byte_end":132167,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132172,"byte_end":132247,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132252,"byte_end":132334,"line_start":270,"line_end":270,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132339,"byte_end":132357,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132362,"byte_end":132365,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132370,"byte_end":132393,"line_start":273,"line_end":273,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132398,"byte_end":132401,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132406,"byte_end":132481,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132486,"byte_end":132568,"line_start":276,"line_end":276,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132573,"byte_end":132629,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132634,"byte_end":132637,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132642,"byte_end":132654,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132659,"byte_end":132662,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132667,"byte_end":132736,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132741,"byte_end":132766,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132771,"byte_end":132774,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132779,"byte_end":132793,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132798,"byte_end":132801,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132806,"byte_end":132813,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132818,"byte_end":132859,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132864,"byte_end":132907,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132912,"byte_end":132915,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132920,"byte_end":132971,"line_start":290,"line_end":290,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132976,"byte_end":132979,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":132984,"byte_end":133024,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133029,"byte_end":133032,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133037,"byte_end":133089,"line_start":294,"line_end":294,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133094,"byte_end":133146,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133151,"byte_end":133203,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133208,"byte_end":133250,"line_start":297,"line_end":297,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133255,"byte_end":133264,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133269,"byte_end":133276,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134481,"byte_end":134487,"line_start":333,"line_end":333,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133396,"byte_end":133468,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133473,"byte_end":133500,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133505,"byte_end":133508,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133513,"byte_end":133588,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133593,"byte_end":133664,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133669,"byte_end":133741,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133746,"byte_end":133820,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133825,"byte_end":133883,"line_start":314,"line_end":314,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133888,"byte_end":133891,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133896,"byte_end":133972,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":133977,"byte_end":134051,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134056,"byte_end":134077,"line_start":318,"line_end":318,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134082,"byte_end":134085,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134090,"byte_end":134104,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134109,"byte_end":134112,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134117,"byte_end":134124,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134129,"byte_end":134170,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134175,"byte_end":134199,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134204,"byte_end":134247,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134252,"byte_end":134255,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134260,"byte_end":134298,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134303,"byte_end":134364,"line_start":328,"line_end":328,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134369,"byte_end":134372,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134377,"byte_end":134447,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134452,"byte_end":134461,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134466,"byte_end":134473,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135780,"byte_end":135790,"line_start":367,"line_end":367,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134683,"byte_end":134758,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134763,"byte_end":134839,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134844,"byte_end":134847,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134852,"byte_end":134927,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":134932,"byte_end":135007,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135012,"byte_end":135088,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135093,"byte_end":135158,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135163,"byte_end":135166,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135171,"byte_end":135247,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135252,"byte_end":135326,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135331,"byte_end":135356,"line_start":352,"line_end":352,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135361,"byte_end":135364,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135369,"byte_end":135383,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135388,"byte_end":135395,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135400,"byte_end":135441,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135446,"byte_end":135489,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135494,"byte_end":135497,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135502,"byte_end":135540,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135545,"byte_end":135595,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135600,"byte_end":135651,"line_start":361,"line_end":361,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135656,"byte_end":135663,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135668,"byte_end":135671,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135676,"byte_end":135746,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135751,"byte_end":135760,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135765,"byte_end":135772,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136796,"byte_end":136800,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":135999,"byte_end":136072,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136077,"byte_end":136105,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136110,"byte_end":136113,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136118,"byte_end":136192,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136197,"byte_end":136264,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136269,"byte_end":136314,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136319,"byte_end":136322,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136327,"byte_end":136403,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136408,"byte_end":136434,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136439,"byte_end":136442,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136447,"byte_end":136461,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136466,"byte_end":136469,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136474,"byte_end":136481,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136486,"byte_end":136527,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136532,"byte_end":136575,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136580,"byte_end":136583,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136588,"byte_end":136625,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136630,"byte_end":136685,"line_start":393,"line_end":393,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136690,"byte_end":136693,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136698,"byte_end":136762,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136767,"byte_end":136776,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136781,"byte_end":136788,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137701,"byte_end":137708,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":136976,"byte_end":137030,"line_start":407,"line_end":407,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137035,"byte_end":137090,"line_start":408,"line_end":408,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137095,"byte_end":137098,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137103,"byte_end":137171,"line_start":410,"line_end":410,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137176,"byte_end":137179,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137184,"byte_end":137198,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137203,"byte_end":137206,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137211,"byte_end":137218,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137223,"byte_end":137264,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137269,"byte_end":137300,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137305,"byte_end":137340,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137345,"byte_end":137365,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137370,"byte_end":137373,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137378,"byte_end":137415,"line_start":420,"line_end":420,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137420,"byte_end":137423,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137428,"byte_end":137455,"line_start":422,"line_end":422,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137460,"byte_end":137484,"line_start":423,"line_end":423,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137489,"byte_end":137531,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137536,"byte_end":137545,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137550,"byte_end":137557,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137562,"byte_end":137565,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137570,"byte_end":137618,"line_start":428,"line_end":428,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137623,"byte_end":137667,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137672,"byte_end":137681,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137686,"byte_end":137693,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138878,"byte_end":138884,"line_start":471,"line_end":471,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137843,"byte_end":137905,"line_start":439,"line_end":439,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137910,"byte_end":137974,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137979,"byte_end":137982,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":137987,"byte_end":138051,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138056,"byte_end":138121,"line_start":443,"line_end":443,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138126,"byte_end":138172,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138177,"byte_end":138180,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138185,"byte_end":138234,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138239,"byte_end":138279,"line_start":447,"line_end":447,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138284,"byte_end":138287,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138292,"byte_end":138306,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138311,"byte_end":138314,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138319,"byte_end":138326,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138331,"byte_end":138372,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138377,"byte_end":138408,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138413,"byte_end":138448,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138453,"byte_end":138473,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138478,"byte_end":138481,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138486,"byte_end":138523,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138528,"byte_end":138531,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138536,"byte_end":138563,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138568,"byte_end":138599,"line_start":460,"line_end":460,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138604,"byte_end":138630,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138635,"byte_end":138701,"line_start":462,"line_end":462,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138706,"byte_end":138715,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138720,"byte_end":138727,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138732,"byte_end":138735,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138740,"byte_end":138775,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138780,"byte_end":138783,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138788,"byte_end":138844,"line_start":468,"line_end":468,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138849,"byte_end":138858,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":138863,"byte_end":138870,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139897,"byte_end":139901,"line_start":499,"line_end":499,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139082,"byte_end":139149,"line_start":479,"line_end":479,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139154,"byte_end":139206,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139211,"byte_end":139214,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139219,"byte_end":139289,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139294,"byte_end":139370,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139375,"byte_end":139451,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139456,"byte_end":139526,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139531,"byte_end":139557,"line_start":486,"line_end":486,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139562,"byte_end":139565,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139570,"byte_end":139584,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139589,"byte_end":139592,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139597,"byte_end":139604,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139609,"byte_end":139650,"line_start":491,"line_end":491,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139655,"byte_end":139698,"line_start":492,"line_end":492,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139703,"byte_end":139706,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139711,"byte_end":139754,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139759,"byte_end":139828,"line_start":495,"line_end":495,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139833,"byte_end":139863,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139868,"byte_end":139877,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":139882,"byte_end":139889,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141072,"byte_end":141079,"line_start":539,"line_end":539,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140113,"byte_end":140178,"line_start":508,"line_end":508,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140183,"byte_end":140186,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140191,"byte_end":140205,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140210,"byte_end":140213,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140218,"byte_end":140225,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140230,"byte_end":140271,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140276,"byte_end":140307,"line_start":514,"line_end":514,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140312,"byte_end":140347,"line_start":515,"line_end":515,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140352,"byte_end":140372,"line_start":516,"line_end":516,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140377,"byte_end":140380,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140385,"byte_end":140424,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140429,"byte_end":140468,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140473,"byte_end":140512,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140517,"byte_end":140520,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140525,"byte_end":140552,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140557,"byte_end":140596,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140601,"byte_end":140640,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140645,"byte_end":140652,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140657,"byte_end":140684,"line_start":526,"line_end":526,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140689,"byte_end":140728,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140733,"byte_end":140772,"line_start":528,"line_end":528,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140777,"byte_end":140784,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140789,"byte_end":140816,"line_start":530,"line_end":530,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140821,"byte_end":140862,"line_start":531,"line_end":531,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140867,"byte_end":140908,"line_start":532,"line_end":532,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140913,"byte_end":140920,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140925,"byte_end":140928,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140933,"byte_end":140992,"line_start":535,"line_end":535,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":140997,"byte_end":141038,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141043,"byte_end":141052,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141057,"byte_end":141064,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141999,"byte_end":142003,"line_start":569,"line_end":569,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state and produces a new stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141206,"byte_end":141304,"line_start":547,"line_end":547,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141309,"byte_end":141312,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element of the stream until provided closure","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141317,"byte_end":141429,"line_start":549,"line_end":549,"column_start":5,"column_end":117}},{"value":"/ returns `None`. Once `None` is returned, stream will be terminated.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141434,"byte_end":141505,"line_start":550,"line_end":550,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141510,"byte_end":141513,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141518,"byte_end":141532,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141537,"byte_end":141540,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141545,"byte_end":141552,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141557,"byte_end":141598,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141603,"byte_end":141627,"line_start":556,"line_end":556,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141632,"byte_end":141675,"line_start":557,"line_end":557,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141680,"byte_end":141683,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141688,"byte_end":141726,"line_start":559,"line_end":559,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141731,"byte_end":141734,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141739,"byte_end":141783,"line_start":561,"line_end":561,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141788,"byte_end":141808,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141813,"byte_end":141876,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141881,"byte_end":141888,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141893,"byte_end":141896,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141901,"byte_end":141965,"line_start":566,"line_end":566,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141970,"byte_end":141979,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":141984,"byte_end":141991,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143024,"byte_end":143034,"line_start":600,"line_end":600,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142249,"byte_end":142323,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142328,"byte_end":142351,"line_start":579,"line_end":579,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142356,"byte_end":142359,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142364,"byte_end":142437,"line_start":581,"line_end":581,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142442,"byte_end":142514,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142519,"byte_end":142593,"line_start":583,"line_end":583,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142598,"byte_end":142609,"line_start":584,"line_end":584,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142614,"byte_end":142617,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142622,"byte_end":142636,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142641,"byte_end":142644,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142649,"byte_end":142656,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142661,"byte_end":142702,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142707,"byte_end":142731,"line_start":590,"line_end":590,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142736,"byte_end":142779,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142784,"byte_end":142787,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142792,"byte_end":142830,"line_start":593,"line_end":593,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142835,"byte_end":142838,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142843,"byte_end":142906,"line_start":595,"line_end":595,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142911,"byte_end":142914,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142919,"byte_end":142990,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":142995,"byte_end":143004,"line_start":598,"line_end":598,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143009,"byte_end":143016,"line_start":599,"line_end":599,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143988,"byte_end":143998,"line_start":630,"line_end":630,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143236,"byte_end":143312,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143317,"byte_end":143340,"line_start":610,"line_end":610,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143345,"byte_end":143348,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143353,"byte_end":143428,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143433,"byte_end":143505,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143510,"byte_end":143574,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143579,"byte_end":143582,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143587,"byte_end":143601,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143606,"byte_end":143609,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143614,"byte_end":143621,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143626,"byte_end":143667,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143672,"byte_end":143696,"line_start":620,"line_end":620,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143701,"byte_end":143744,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143749,"byte_end":143752,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143757,"byte_end":143795,"line_start":623,"line_end":623,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143800,"byte_end":143803,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143808,"byte_end":143871,"line_start":625,"line_end":625,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143876,"byte_end":143879,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143884,"byte_end":143954,"line_start":627,"line_end":627,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143959,"byte_end":143968,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":143973,"byte_end":143980,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145258,"byte_end":145266,"line_start":672,"line_end":672,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144200,"byte_end":144271,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144276,"byte_end":144319,"line_start":640,"line_end":640,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144324,"byte_end":144327,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144332,"byte_end":144407,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144412,"byte_end":144482,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144487,"byte_end":144525,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144530,"byte_end":144533,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144538,"byte_end":144613,"line_start":646,"line_end":646,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144618,"byte_end":144661,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144666,"byte_end":144669,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144674,"byte_end":144747,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144752,"byte_end":144795,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144800,"byte_end":144803,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144808,"byte_end":144822,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144827,"byte_end":144830,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144835,"byte_end":144842,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144847,"byte_end":144888,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144893,"byte_end":144917,"line_start":656,"line_end":656,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144922,"byte_end":144965,"line_start":657,"line_end":657,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144970,"byte_end":144973,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":144978,"byte_end":144996,"line_start":659,"line_end":659,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145001,"byte_end":145004,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145009,"byte_end":145014,"line_start":661,"line_end":661,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145019,"byte_end":145080,"line_start":662,"line_end":662,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145085,"byte_end":145107,"line_start":663,"line_end":663,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145112,"byte_end":145141,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145146,"byte_end":145157,"line_start":665,"line_end":665,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145162,"byte_end":145180,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145185,"byte_end":145190,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145195,"byte_end":145198,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145203,"byte_end":145224,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145229,"byte_end":145238,"line_start":670,"line_end":670,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":145243,"byte_end":145250,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148268,"byte_end":148272,"line_start":757,"line_end":757,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147760,"byte_end":147831,"line_start":741,"line_end":741,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147836,"byte_end":147839,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147844,"byte_end":147917,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147922,"byte_end":147957,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147962,"byte_end":147965,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147970,"byte_end":147984,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147989,"byte_end":147992,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":147997,"byte_end":148004,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148009,"byte_end":148050,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148055,"byte_end":148098,"line_start":750,"line_end":750,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148103,"byte_end":148106,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148111,"byte_end":148157,"line_start":752,"line_end":752,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148162,"byte_end":148165,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148170,"byte_end":148234,"line_start":754,"line_end":754,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148239,"byte_end":148248,"line_start":755,"line_end":755,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148253,"byte_end":148260,"line_start":756,"line_end":756,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148905,"byte_end":148909,"line_start":780,"line_end":780,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148378,"byte_end":148450,"line_start":764,"line_end":764,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148455,"byte_end":148458,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148463,"byte_end":148536,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148541,"byte_end":148587,"line_start":767,"line_end":767,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148592,"byte_end":148595,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148600,"byte_end":148614,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148619,"byte_end":148622,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148627,"byte_end":148634,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148639,"byte_end":148680,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148685,"byte_end":148728,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148733,"byte_end":148736,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148741,"byte_end":148787,"line_start":775,"line_end":775,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148792,"byte_end":148795,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148800,"byte_end":148871,"line_start":777,"line_end":777,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148876,"byte_end":148885,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":148890,"byte_end":148897,"line_start":779,"line_end":779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150498,"byte_end":150502,"line_start":826,"line_end":826,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149015,"byte_end":149086,"line_start":787,"line_end":787,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149091,"byte_end":149164,"line_start":788,"line_end":788,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149169,"byte_end":149207,"line_start":789,"line_end":789,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149212,"byte_end":149215,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149220,"byte_end":149274,"line_start":791,"line_end":791,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149279,"byte_end":149351,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149356,"byte_end":149432,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149437,"byte_end":149505,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149510,"byte_end":149586,"line_start":795,"line_end":795,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149591,"byte_end":149613,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149618,"byte_end":149621,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149626,"byte_end":149693,"line_start":798,"line_end":798,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149698,"byte_end":149766,"line_start":799,"line_end":799,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149771,"byte_end":149784,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149789,"byte_end":149792,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149797,"byte_end":149811,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149816,"byte_end":149819,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149824,"byte_end":149831,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149836,"byte_end":149879,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149884,"byte_end":149927,"line_start":806,"line_end":806,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149932,"byte_end":149960,"line_start":807,"line_end":807,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149965,"byte_end":149968,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149973,"byte_end":149991,"line_start":809,"line_end":809,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":149996,"byte_end":150034,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150039,"byte_end":150054,"line_start":811,"line_end":811,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150059,"byte_end":150076,"line_start":812,"line_end":812,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150081,"byte_end":150123,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150128,"byte_end":150163,"line_start":814,"line_end":814,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150168,"byte_end":150212,"line_start":815,"line_end":815,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150217,"byte_end":150226,"line_start":816,"line_end":816,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150231,"byte_end":150245,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150250,"byte_end":150253,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150258,"byte_end":150301,"line_start":819,"line_end":819,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150306,"byte_end":150343,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150348,"byte_end":150385,"line_start":821,"line_end":821,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150390,"byte_end":150424,"line_start":822,"line_end":822,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150429,"byte_end":150463,"line_start":823,"line_end":823,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150468,"byte_end":150478,"line_start":824,"line_end":824,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150483,"byte_end":150490,"line_start":825,"line_end":825,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151399,"byte_end":151405,"line_start":859,"line_end":859,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150595,"byte_end":150642,"line_start":833,"line_end":833,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150647,"byte_end":150650,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150655,"byte_end":150729,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150734,"byte_end":150771,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150776,"byte_end":150779,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150784,"byte_end":150798,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150803,"byte_end":150806,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150811,"byte_end":150818,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150823,"byte_end":150864,"line_start":841,"line_end":841,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150869,"byte_end":150912,"line_start":842,"line_end":842,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150917,"byte_end":150920,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150925,"byte_end":150965,"line_start":844,"line_end":844,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150970,"byte_end":150973,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":150978,"byte_end":151007,"line_start":846,"line_end":846,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151012,"byte_end":151040,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151045,"byte_end":151102,"line_start":848,"line_end":848,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151107,"byte_end":151134,"line_start":849,"line_end":849,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151139,"byte_end":151162,"line_start":850,"line_end":850,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151167,"byte_end":151170,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151175,"byte_end":151210,"line_start":852,"line_end":852,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151215,"byte_end":151243,"line_start":853,"line_end":853,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151248,"byte_end":151305,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151310,"byte_end":151337,"line_start":855,"line_end":855,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151342,"byte_end":151365,"line_start":856,"line_end":856,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151370,"byte_end":151379,"line_start":857,"line_end":857,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":151384,"byte_end":151391,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157422,"byte_end":157425,"line_start":1026,"line_end":1026,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156734,"byte_end":156782,"line_start":1004,"line_end":1004,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156787,"byte_end":156790,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156795,"byte_end":156868,"line_start":1006,"line_end":1006,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156873,"byte_end":156945,"line_start":1007,"line_end":1007,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156950,"byte_end":156963,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156968,"byte_end":156971,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156976,"byte_end":156990,"line_start":1010,"line_end":1010,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":156995,"byte_end":156998,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157003,"byte_end":157010,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157015,"byte_end":157056,"line_start":1013,"line_end":1013,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157061,"byte_end":157104,"line_start":1014,"line_end":1014,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157109,"byte_end":157112,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157117,"byte_end":157155,"line_start":1016,"line_end":1016,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157160,"byte_end":157199,"line_start":1017,"line_end":1017,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157204,"byte_end":157207,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157212,"byte_end":157246,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157251,"byte_end":157292,"line_start":1020,"line_end":1020,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157297,"byte_end":157325,"line_start":1021,"line_end":1021,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157330,"byte_end":157380,"line_start":1022,"line_end":1022,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157385,"byte_end":157394,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157399,"byte_end":157406,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157411,"byte_end":157414,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158289,"byte_end":158294,"line_start":1057,"line_end":1057,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157562,"byte_end":157599,"line_start":1034,"line_end":1034,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157604,"byte_end":157607,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157612,"byte_end":157683,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157688,"byte_end":157764,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157769,"byte_end":157772,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157777,"byte_end":157784,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157789,"byte_end":157830,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157835,"byte_end":157878,"line_start":1041,"line_end":1041,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157883,"byte_end":157886,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157891,"byte_end":157948,"line_start":1043,"line_end":1043,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":157953,"byte_end":158009,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158014,"byte_end":158017,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158022,"byte_end":158062,"line_start":1046,"line_end":1046,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158067,"byte_end":158070,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158075,"byte_end":158123,"line_start":1048,"line_end":1048,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158128,"byte_end":158156,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158161,"byte_end":158176,"line_start":1050,"line_end":1050,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158181,"byte_end":158200,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158205,"byte_end":158223,"line_start":1052,"line_end":1052,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158228,"byte_end":158243,"line_start":1053,"line_end":1053,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158248,"byte_end":158255,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158260,"byte_end":158269,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158274,"byte_end":158281,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158600,"byte_end":158608,"line_start":1068,"line_end":1068,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158454,"byte_end":158509,"line_start":1065,"line_end":1065,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158514,"byte_end":158517,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":158522,"byte_end":158592,"line_start":1067,"line_end":1067,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161660,"byte_end":161667,"line_start":1144,"line_end":1144,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161357,"byte_end":161430,"line_start":1139,"line_end":1139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161435,"byte_end":161438,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161443,"byte_end":161512,"line_start":1141,"line_end":1141,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161517,"byte_end":161586,"line_start":1142,"line_end":1142,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161591,"byte_end":161652,"line_start":1143,"line_end":1143,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162091,"byte_end":162102,"line_start":1157,"line_end":1157,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161812,"byte_end":161887,"line_start":1152,"line_end":1152,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161892,"byte_end":161913,"line_start":1153,"line_end":1153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161918,"byte_end":161921,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":161926,"byte_end":162006,"line_start":1155,"line_end":1155,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162011,"byte_end":162083,"line_start":1156,"line_end":1156,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162523,"byte_end":162535,"line_start":1170,"line_end":1170,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162244,"byte_end":162320,"line_start":1165,"line_end":1165,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162325,"byte_end":162346,"line_start":1166,"line_end":1166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162351,"byte_end":162354,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162359,"byte_end":162438,"line_start":1168,"line_end":1168,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162443,"byte_end":162515,"line_start":1169,"line_end":1169,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162779,"byte_end":162794,"line_start":1180,"line_end":1180,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162678,"byte_end":162749,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162754,"byte_end":162771,"line_start":1179,"line_end":1179,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164895,"byte_end":164911,"line_start":1235,"line_end":1235,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":162941,"byte_end":163016,"line_start":1187,"line_end":1187,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163021,"byte_end":163031,"line_start":1188,"line_end":1188,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163036,"byte_end":163039,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163044,"byte_end":163117,"line_start":1190,"line_end":1190,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163122,"byte_end":163190,"line_start":1191,"line_end":1191,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163195,"byte_end":163243,"line_start":1192,"line_end":1192,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163248,"byte_end":163323,"line_start":1193,"line_end":1193,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163328,"byte_end":163404,"line_start":1194,"line_end":1194,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163409,"byte_end":163435,"line_start":1195,"line_end":1195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163440,"byte_end":163443,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163448,"byte_end":163521,"line_start":1197,"line_end":1197,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163526,"byte_end":163596,"line_start":1198,"line_end":1198,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163601,"byte_end":163641,"line_start":1199,"line_end":1199,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163646,"byte_end":163649,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163654,"byte_end":163708,"line_start":1201,"line_end":1201,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163713,"byte_end":163797,"line_start":1202,"line_end":1202,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163802,"byte_end":163805,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163810,"byte_end":163824,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163829,"byte_end":163832,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163837,"byte_end":163844,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163849,"byte_end":163890,"line_start":1207,"line_end":1207,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163895,"byte_end":163929,"line_start":1208,"line_end":1208,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163934,"byte_end":163989,"line_start":1209,"line_end":1209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":163994,"byte_end":163997,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164002,"byte_end":164037,"line_start":1211,"line_end":1211,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164042,"byte_end":164092,"line_start":1212,"line_end":1212,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164097,"byte_end":164119,"line_start":1213,"line_end":1213,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164124,"byte_end":164134,"line_start":1214,"line_end":1214,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164139,"byte_end":164156,"line_start":1215,"line_end":1215,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164161,"byte_end":164187,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164192,"byte_end":164247,"line_start":1217,"line_end":1217,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164252,"byte_end":164281,"line_start":1218,"line_end":1218,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164286,"byte_end":164349,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164354,"byte_end":164400,"line_start":1220,"line_end":1220,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164405,"byte_end":164419,"line_start":1221,"line_end":1221,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164424,"byte_end":164493,"line_start":1222,"line_end":1222,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164498,"byte_end":164523,"line_start":1223,"line_end":1223,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164528,"byte_end":164581,"line_start":1224,"line_end":1224,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164586,"byte_end":164615,"line_start":1225,"line_end":1225,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164620,"byte_end":164633,"line_start":1226,"line_end":1226,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164638,"byte_end":164708,"line_start":1227,"line_end":1227,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164713,"byte_end":164772,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164777,"byte_end":164807,"line_start":1229,"line_end":1229,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164812,"byte_end":164821,"line_start":1230,"line_end":1230,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164826,"byte_end":164831,"line_start":1231,"line_end":1231,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164836,"byte_end":164861,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164866,"byte_end":164875,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":164880,"byte_end":164887,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271066,"byte_end":271073,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`and_then`](super::TryStreamExt::and_then) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":270935,"byte_end":271005,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271006,"byte_end":271054,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272018,"byte_end":272025,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271911,"byte_end":271984,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271989,"byte_end":272006,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272335,"byte_end":272342,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272074,"byte_end":272141,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272146,"byte_end":272177,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272182,"byte_end":272185,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272190,"byte_end":272263,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272268,"byte_end":272323,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272671,"byte_end":272682,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<AndThen<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272403,"byte_end":272477,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272482,"byte_end":272513,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272518,"byte_end":272521,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272526,"byte_end":272599,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272604,"byte_end":272659,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272991,"byte_end":273001,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272756,"byte_end":272818,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272823,"byte_end":272826,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272831,"byte_end":272903,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":272908,"byte_end":272979,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275116,"byte_end":275123,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::stream::try_stream::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`err_into`](super::TryStreamExt::err_into) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":274968,"byte_end":275038,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275056,"byte_end":275104,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275502,"byte_end":275509,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ErrInto<St, E>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275395,"byte_end":275468,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275473,"byte_end":275490,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275819,"byte_end":275826,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ErrInto<St, E>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275558,"byte_end":275625,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275630,"byte_end":275661,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275666,"byte_end":275669,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275674,"byte_end":275747,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275752,"byte_end":275807,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276155,"byte_end":276166,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ErrInto<St, E>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275887,"byte_end":275961,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275966,"byte_end":275997,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276002,"byte_end":276005,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276010,"byte_end":276083,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276088,"byte_end":276143,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276475,"byte_end":276485,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ErrInto<St, E>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276240,"byte_end":276302,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276307,"byte_end":276310,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276315,"byte_end":276387,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276392,"byte_end":276463,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277787,"byte_end":277796,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::stream::try_stream::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277652,"byte_end":277726,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277727,"byte_end":277775,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278498,"byte_end":278505,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278391,"byte_end":278464,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278469,"byte_end":278486,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278815,"byte_end":278822,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278554,"byte_end":278621,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278626,"byte_end":278657,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278662,"byte_end":278665,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278670,"byte_end":278743,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278748,"byte_end":278803,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279151,"byte_end":279162,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278883,"byte_end":278957,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278962,"byte_end":278993,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278998,"byte_end":279001,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279006,"byte_end":279079,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279084,"byte_end":279139,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279471,"byte_end":279481,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279236,"byte_end":279298,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279303,"byte_end":279306,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279311,"byte_end":279383,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279388,"byte_end":279459,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280853,"byte_end":280863,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::try_stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280716,"byte_end":280792,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280793,"byte_end":280841,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281573,"byte_end":281580,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281466,"byte_end":281539,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281544,"byte_end":281561,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281890,"byte_end":281897,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281629,"byte_end":281696,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281701,"byte_end":281732,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281737,"byte_end":281740,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281745,"byte_end":281818,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281823,"byte_end":281878,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282226,"byte_end":282237,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281958,"byte_end":282032,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282037,"byte_end":282068,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282073,"byte_end":282076,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282081,"byte_end":282154,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282159,"byte_end":282214,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282546,"byte_end":282556,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282311,"byte_end":282373,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282378,"byte_end":282381,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282386,"byte_end":282458,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282463,"byte_end":282534,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4251},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283888,"byte_end":283898,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4253}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283734,"byte_end":283810,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283828,"byte_end":283876,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284189,"byte_end":284196,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoStream<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284082,"byte_end":284155,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284160,"byte_end":284177,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284506,"byte_end":284513,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoStream<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284245,"byte_end":284312,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284317,"byte_end":284348,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284353,"byte_end":284356,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284361,"byte_end":284434,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284439,"byte_end":284494,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284842,"byte_end":284853,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<IntoStream<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284574,"byte_end":284648,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284653,"byte_end":284684,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284689,"byte_end":284692,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284697,"byte_end":284770,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284775,"byte_end":284830,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285162,"byte_end":285172,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoStream<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284927,"byte_end":284989,"line_start":47,"line_end":47,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":284994,"byte_end":284997,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285002,"byte_end":285074,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285079,"byte_end":285150,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2406},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286289,"byte_end":286294,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::stream::try_stream::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286162,"byte_end":286228,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286229,"byte_end":286277,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286929,"byte_end":286936,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapOk<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286822,"byte_end":286895,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286900,"byte_end":286917,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287246,"byte_end":287253,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapOk<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286985,"byte_end":287052,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287057,"byte_end":287088,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287093,"byte_end":287096,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287101,"byte_end":287174,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287179,"byte_end":287234,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287582,"byte_end":287593,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapOk<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287314,"byte_end":287388,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287393,"byte_end":287424,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287429,"byte_end":287432,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287437,"byte_end":287510,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287515,"byte_end":287570,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287902,"byte_end":287912,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapOk<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287667,"byte_end":287729,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287734,"byte_end":287737,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287742,"byte_end":287814,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287819,"byte_end":287890,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289228,"byte_end":289234,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::try_stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_err`](super::TryStreamExt::map_err) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289099,"byte_end":289167,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289168,"byte_end":289216,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289875,"byte_end":289882,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<St, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289768,"byte_end":289841,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289846,"byte_end":289863,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290192,"byte_end":290199,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<St, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289931,"byte_end":289998,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290003,"byte_end":290034,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290039,"byte_end":290042,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290047,"byte_end":290120,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290125,"byte_end":290180,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290528,"byte_end":290539,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<St, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290260,"byte_end":290334,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290339,"byte_end":290370,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290375,"byte_end":290378,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290383,"byte_end":290456,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290461,"byte_end":290516,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290848,"byte_end":290858,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<St, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290613,"byte_end":290675,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290680,"byte_end":290683,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290688,"byte_end":290760,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290765,"byte_end":290836,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2505},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292221,"byte_end":292227,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`or_else`](super::TryStreamExt::or_else) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292092,"byte_end":292160,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292161,"byte_end":292209,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293164,"byte_end":293171,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<OrElse<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293057,"byte_end":293130,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293135,"byte_end":293152,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293481,"byte_end":293488,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrElse<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293220,"byte_end":293287,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293292,"byte_end":293323,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293328,"byte_end":293331,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293336,"byte_end":293409,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293414,"byte_end":293469,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293817,"byte_end":293828,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<OrElse<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293549,"byte_end":293623,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293628,"byte_end":293659,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293664,"byte_end":293667,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293672,"byte_end":293745,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293750,"byte_end":293805,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294137,"byte_end":294147,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OrElse<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293902,"byte_end":293964,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293969,"byte_end":293972,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":293977,"byte_end":294049,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294054,"byte_end":294125,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4278},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296304,"byte_end":296311,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4281}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296137,"byte_end":296207,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296225,"byte_end":296292,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2586},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297384,"byte_end":297394,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297226,"byte_end":297304,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297305,"byte_end":297372,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299483,"byte_end":299492,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter`](super::TryStreamExt::try_filter)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299344,"byte_end":299410,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299411,"byte_end":299422,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299423,"byte_end":299471,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300662,"byte_end":300669,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilter<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300555,"byte_end":300628,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300633,"byte_end":300650,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300979,"byte_end":300986,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilter<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300718,"byte_end":300785,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300790,"byte_end":300821,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300826,"byte_end":300829,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300834,"byte_end":300907,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300912,"byte_end":300967,"line_start":68,"line_end":68,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301315,"byte_end":301326,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilter<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301047,"byte_end":301121,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301126,"byte_end":301157,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301162,"byte_end":301165,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301170,"byte_end":301243,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301248,"byte_end":301303,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301635,"byte_end":301645,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilter<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301400,"byte_end":301462,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301467,"byte_end":301470,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301475,"byte_end":301547,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301552,"byte_end":301623,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304114,"byte_end":304126,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":303967,"byte_end":304041,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304042,"byte_end":304053,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304054,"byte_end":304102,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304977,"byte_end":304984,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilterMap<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304870,"byte_end":304943,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304948,"byte_end":304965,"line_start":46,"line_end":46,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305294,"byte_end":305301,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305033,"byte_end":305100,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305105,"byte_end":305136,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305141,"byte_end":305144,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305149,"byte_end":305222,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305227,"byte_end":305282,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305630,"byte_end":305641,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305362,"byte_end":305436,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305441,"byte_end":305472,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305477,"byte_end":305480,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305485,"byte_end":305558,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305563,"byte_end":305618,"line_start":64,"line_end":64,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305950,"byte_end":305960,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilterMap<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305715,"byte_end":305777,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305782,"byte_end":305785,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305790,"byte_end":305862,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":305867,"byte_end":305938,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4312},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308246,"byte_end":308256,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308092,"byte_end":308168,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308186,"byte_end":308234,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308875,"byte_end":308882,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFlatten<St>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308768,"byte_end":308841,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308846,"byte_end":308863,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309192,"byte_end":309199,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFlatten<St>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308931,"byte_end":308998,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309003,"byte_end":309034,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309039,"byte_end":309042,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309047,"byte_end":309120,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309125,"byte_end":309180,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309528,"byte_end":309539,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFlatten<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309260,"byte_end":309334,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309339,"byte_end":309370,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309375,"byte_end":309378,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309383,"byte_end":309456,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309461,"byte_end":309516,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309848,"byte_end":309858,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFlatten<St>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309613,"byte_end":309675,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309680,"byte_end":309683,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309688,"byte_end":309760,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309765,"byte_end":309836,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4325},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311752,"byte_end":311762,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":4328},{"krate":0,"index":4329}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_collect`](super::TryStreamExt::try_collect) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311579,"byte_end":311655,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311673,"byte_end":311740,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4339},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313305,"byte_end":313314,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_concat`](super::TryStreamExt::try_concat) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313134,"byte_end":313208,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313226,"byte_end":313293,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2818},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":314948,"byte_end":314955,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_fold`](super::TryStreamExt::try_fold) method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":314798,"byte_end":314868,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":314869,"byte_end":314936,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2869},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320107,"byte_end":320117,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318250,"byte_end":318326,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318327,"byte_end":318330,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318331,"byte_end":318407,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318408,"byte_end":318478,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318479,"byte_end":318538,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318539,"byte_end":318542,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318543,"byte_end":318621,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318622,"byte_end":318699,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318700,"byte_end":318764,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318765,"byte_end":318768,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318769,"byte_end":318841,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318842,"byte_end":318920,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318921,"byte_end":318950,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318951,"byte_end":318954,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":318955,"byte_end":319032,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319033,"byte_end":319097,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319098,"byte_end":319150,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319151,"byte_end":319154,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319155,"byte_end":319232,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319233,"byte_end":319305,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319306,"byte_end":319375,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319376,"byte_end":319454,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319455,"byte_end":319458,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319459,"byte_end":319472,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319473,"byte_end":319476,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319477,"byte_end":319484,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319485,"byte_end":319518,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319519,"byte_end":319542,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319543,"byte_end":319584,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319585,"byte_end":319631,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319632,"byte_end":319635,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319636,"byte_end":319695,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319696,"byte_end":319718,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319719,"byte_end":319753,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319754,"byte_end":319763,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319764,"byte_end":319767,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319768,"byte_end":319791,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319792,"byte_end":319831,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319832,"byte_end":319868,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319869,"byte_end":319912,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319913,"byte_end":319929,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319930,"byte_end":319950,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319951,"byte_end":319960,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319961,"byte_end":319968,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319969,"byte_end":319972,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":319973,"byte_end":320038,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320039,"byte_end":320081,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320082,"byte_end":320091,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320092,"byte_end":320099,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320436,"byte_end":320445,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_unfold`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320332,"byte_end":320375,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320376,"byte_end":320424,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322602,"byte_end":322614,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322455,"byte_end":322529,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322530,"byte_end":322541,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322542,"byte_end":322590,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324120,"byte_end":324127,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrySkipWhile<St, Fut, F>>::get_ref","value":"fn (&self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324013,"byte_end":324086,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324091,"byte_end":324108,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324437,"byte_end":324444,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_mut","value":"fn (&mut self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324176,"byte_end":324243,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324248,"byte_end":324279,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324284,"byte_end":324287,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324292,"byte_end":324365,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324370,"byte_end":324425,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324773,"byte_end":324784,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324505,"byte_end":324579,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324584,"byte_end":324615,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324620,"byte_end":324623,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324628,"byte_end":324701,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324706,"byte_end":324761,"line_start":84,"line_end":84,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325093,"byte_end":325103,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySkipWhile<St, Fut, F>>::into_inner","value":"fn (self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324858,"byte_end":324920,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324925,"byte_end":324928,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":324933,"byte_end":325005,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325010,"byte_end":325081,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2964},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244638,"byte_end":244650,"line_start":112,"line_end":112,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3005},{"krate":0,"index":3006}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244576,"byte_end":244627,"line_start":111,"line_end":111,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245192,"byte_end":245200,"line_start":130,"line_end":130,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244668,"byte_end":244742,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244747,"byte_end":244773,"line_start":114,"line_end":114,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244778,"byte_end":244781,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244786,"byte_end":244800,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244805,"byte_end":244808,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244813,"byte_end":244820,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244825,"byte_end":244866,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244871,"byte_end":244917,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244922,"byte_end":244925,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244930,"byte_end":244950,"line_start":122,"line_end":122,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244955,"byte_end":245000,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245005,"byte_end":245036,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245041,"byte_end":245044,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245049,"byte_end":245103,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245108,"byte_end":245159,"line_start":127,"line_end":127,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245164,"byte_end":245172,"line_start":128,"line_end":128,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245177,"byte_end":245184,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245855,"byte_end":245861,"line_start":155,"line_end":155,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245335,"byte_end":245408,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245413,"byte_end":245444,"line_start":139,"line_end":139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245449,"byte_end":245452,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245457,"byte_end":245471,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245476,"byte_end":245479,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245484,"byte_end":245491,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245496,"byte_end":245537,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245542,"byte_end":245588,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245593,"byte_end":245596,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245601,"byte_end":245621,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245626,"byte_end":245667,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245672,"byte_end":245703,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245708,"byte_end":245711,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245716,"byte_end":245769,"line_start":151,"line_end":151,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245774,"byte_end":245822,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245827,"byte_end":245835,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":245840,"byte_end":245847,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246526,"byte_end":246533,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246007,"byte_end":246078,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246083,"byte_end":246114,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246119,"byte_end":246122,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246127,"byte_end":246141,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246146,"byte_end":246149,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246154,"byte_end":246161,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246166,"byte_end":246207,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246212,"byte_end":246258,"line_start":170,"line_end":170,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246263,"byte_end":246266,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246271,"byte_end":246291,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246296,"byte_end":246337,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246342,"byte_end":246374,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246379,"byte_end":246382,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246387,"byte_end":246440,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246445,"byte_end":246493,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246498,"byte_end":246506,"line_start":178,"line_end":178,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246511,"byte_end":246518,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248097,"byte_end":248105,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246684,"byte_end":246760,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246765,"byte_end":246805,"line_start":189,"line_end":189,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246810,"byte_end":246813,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246818,"byte_end":246894,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246899,"byte_end":246975,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":246980,"byte_end":247053,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247058,"byte_end":247100,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247105,"byte_end":247108,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247113,"byte_end":247186,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247191,"byte_end":247222,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247227,"byte_end":247230,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247235,"byte_end":247309,"line_start":199,"line_end":199,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247314,"byte_end":247388,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247393,"byte_end":247409,"line_start":201,"line_end":201,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247414,"byte_end":247417,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247422,"byte_end":247493,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247498,"byte_end":247524,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247529,"byte_end":247532,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247537,"byte_end":247609,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247614,"byte_end":247663,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247668,"byte_end":247671,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247676,"byte_end":247690,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247695,"byte_end":247698,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247703,"byte_end":247710,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247715,"byte_end":247746,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247751,"byte_end":247775,"line_start":213,"line_end":213,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247780,"byte_end":247818,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247823,"byte_end":247826,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247831,"byte_end":247887,"line_start":216,"line_end":216,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247892,"byte_end":247895,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247900,"byte_end":247935,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247940,"byte_end":247979,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":247984,"byte_end":248008,"line_start":220,"line_end":220,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248013,"byte_end":248029,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248034,"byte_end":248050,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248055,"byte_end":248065,"line_start":223,"line_end":223,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248070,"byte_end":248077,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248082,"byte_end":248089,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249208,"byte_end":249215,"line_start":252,"line_end":252,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248309,"byte_end":248374,"line_start":235,"line_end":235,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248379,"byte_end":248428,"line_start":236,"line_end":236,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248433,"byte_end":248436,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248441,"byte_end":248520,"line_start":238,"line_end":238,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248525,"byte_end":248599,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248604,"byte_end":248680,"line_start":240,"line_end":240,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248685,"byte_end":248730,"line_start":241,"line_end":241,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248735,"byte_end":248738,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248743,"byte_end":248818,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248823,"byte_end":248863,"line_start":244,"line_end":244,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248868,"byte_end":248871,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248876,"byte_end":248985,"line_start":246,"line_end":246,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":248990,"byte_end":249064,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249069,"byte_end":249085,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249090,"byte_end":249093,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249098,"byte_end":249169,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249174,"byte_end":249200,"line_start":251,"line_end":251,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249717,"byte_end":249727,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249414,"byte_end":249488,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249493,"byte_end":249503,"line_start":262,"line_end":262,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249508,"byte_end":249511,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249516,"byte_end":249586,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249591,"byte_end":249667,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249672,"byte_end":249709,"line_start":266,"line_end":266,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250165,"byte_end":250176,"line_start":280,"line_end":280,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249874,"byte_end":249953,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249958,"byte_end":249961,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":249966,"byte_end":250036,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250041,"byte_end":250115,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250120,"byte_end":250157,"line_start":279,"line_end":279,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2983},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251046,"byte_end":251057,"line_start":309,"line_end":309,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250328,"byte_end":250381,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250386,"byte_end":250430,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250435,"byte_end":250438,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250443,"byte_end":250492,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250497,"byte_end":250570,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250575,"byte_end":250595,"line_start":293,"line_end":293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250600,"byte_end":250603,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250608,"byte_end":250622,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250627,"byte_end":250630,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250635,"byte_end":250642,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250647,"byte_end":250706,"line_start":298,"line_end":298,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250711,"byte_end":250714,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250719,"byte_end":250738,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250743,"byte_end":250761,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250766,"byte_end":250838,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250843,"byte_end":250873,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250878,"byte_end":250885,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250890,"byte_end":250964,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250969,"byte_end":250972,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":250977,"byte_end":251026,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251031,"byte_end":251038,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251901,"byte_end":251909,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251162,"byte_end":251236,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251241,"byte_end":251315,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251320,"byte_end":251332,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251337,"byte_end":251340,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251345,"byte_end":251412,"line_start":320,"line_end":320,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251417,"byte_end":251489,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251494,"byte_end":251533,"line_start":322,"line_end":322,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251538,"byte_end":251541,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251546,"byte_end":251560,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251565,"byte_end":251568,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251573,"byte_end":251580,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251585,"byte_end":251626,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251631,"byte_end":251677,"line_start":328,"line_end":328,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251682,"byte_end":251685,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251690,"byte_end":251747,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251752,"byte_end":251755,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251760,"byte_end":251814,"line_start":332,"line_end":332,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251819,"byte_end":251868,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251873,"byte_end":251881,"line_start":334,"line_end":334,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":251886,"byte_end":251893,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253202,"byte_end":253214,"line_start":376,"line_end":376,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252017,"byte_end":252086,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252091,"byte_end":252147,"line_start":344,"line_end":344,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252152,"byte_end":252155,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252160,"byte_end":252235,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252240,"byte_end":252310,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252315,"byte_end":252353,"line_start":348,"line_end":348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252358,"byte_end":252361,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252366,"byte_end":252444,"line_start":350,"line_end":350,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252449,"byte_end":252509,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252514,"byte_end":252571,"line_start":352,"line_end":352,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252576,"byte_end":252643,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252648,"byte_end":252678,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252683,"byte_end":252686,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252691,"byte_end":252705,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252710,"byte_end":252713,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252718,"byte_end":252725,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252730,"byte_end":252771,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252776,"byte_end":252800,"line_start":360,"line_end":360,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252805,"byte_end":252851,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252856,"byte_end":252859,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252864,"byte_end":252885,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252890,"byte_end":252893,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252898,"byte_end":252903,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252908,"byte_end":252969,"line_start":366,"line_end":366,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":252974,"byte_end":252996,"line_start":367,"line_end":367,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253001,"byte_end":253065,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253070,"byte_end":253081,"line_start":369,"line_end":369,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253086,"byte_end":253125,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253130,"byte_end":253135,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253140,"byte_end":253143,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253148,"byte_end":253169,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253174,"byte_end":253182,"line_start":374,"line_end":374,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253187,"byte_end":253194,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254174,"byte_end":254188,"line_start":405,"line_end":405,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253433,"byte_end":253507,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253512,"byte_end":253535,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253540,"byte_end":253543,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253548,"byte_end":253643,"line_start":388,"line_end":388,"column_start":5,"column_end":100}},{"value":"/ but exits early if an error occurs.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253648,"byte_end":253687,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253692,"byte_end":253695,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253700,"byte_end":253714,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253719,"byte_end":253722,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253727,"byte_end":253734,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253739,"byte_end":253780,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253785,"byte_end":253809,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253814,"byte_end":253860,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253865,"byte_end":253868,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253873,"byte_end":253942,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":253947,"byte_end":254017,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254022,"byte_end":254025,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254030,"byte_end":254097,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254102,"byte_end":254141,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254146,"byte_end":254154,"line_start":403,"line_end":403,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":254159,"byte_end":254166,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2991},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257476,"byte_end":257487,"line_start":500,"line_end":500,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256437,"byte_end":256489,"line_start":470,"line_end":470,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256494,"byte_end":256561,"line_start":471,"line_end":471,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256566,"byte_end":256569,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256574,"byte_end":256648,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256653,"byte_end":256734,"line_start":474,"line_end":474,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256739,"byte_end":256809,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256814,"byte_end":256817,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256822,"byte_end":256890,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256895,"byte_end":256898,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256903,"byte_end":256917,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256922,"byte_end":256925,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256930,"byte_end":256937,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256942,"byte_end":256983,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":256988,"byte_end":257019,"line_start":483,"line_end":483,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257024,"byte_end":257062,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257067,"byte_end":257087,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257092,"byte_end":257095,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257100,"byte_end":257137,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257142,"byte_end":257145,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257150,"byte_end":257177,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257182,"byte_end":257206,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257211,"byte_end":257257,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257262,"byte_end":257271,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257276,"byte_end":257319,"line_start":493,"line_end":493,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257324,"byte_end":257331,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257336,"byte_end":257339,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257344,"byte_end":257407,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257412,"byte_end":257443,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257448,"byte_end":257456,"line_start":498,"line_end":498,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257461,"byte_end":257468,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258914,"byte_end":258924,"line_start":537,"line_end":537,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257626,"byte_end":257699,"line_start":507,"line_end":507,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257704,"byte_end":257738,"line_start":508,"line_end":508,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257743,"byte_end":257746,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257751,"byte_end":257826,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257831,"byte_end":257906,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257911,"byte_end":257984,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":257989,"byte_end":258060,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258065,"byte_end":258115,"line_start":514,"line_end":514,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258120,"byte_end":258123,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258128,"byte_end":258199,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258204,"byte_end":258207,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258212,"byte_end":258288,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258293,"byte_end":258363,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258368,"byte_end":258393,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258398,"byte_end":258401,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258406,"byte_end":258420,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258425,"byte_end":258432,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258437,"byte_end":258478,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258483,"byte_end":258507,"line_start":525,"line_end":525,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258512,"byte_end":258569,"line_start":526,"line_end":526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258574,"byte_end":258577,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258582,"byte_end":258662,"line_start":528,"line_end":528,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258667,"byte_end":258710,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258715,"byte_end":258748,"line_start":530,"line_end":530,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258753,"byte_end":258760,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258765,"byte_end":258768,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258773,"byte_end":258821,"line_start":533,"line_end":533,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258826,"byte_end":258881,"line_start":534,"line_end":534,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258886,"byte_end":258894,"line_start":535,"line_end":535,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":258899,"byte_end":258906,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260500,"byte_end":260514,"line_start":578,"line_end":578,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259124,"byte_end":259186,"line_start":546,"line_end":546,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259191,"byte_end":259259,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259264,"byte_end":259298,"line_start":548,"line_end":548,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259303,"byte_end":259306,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259311,"byte_end":259386,"line_start":550,"line_end":550,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259391,"byte_end":259466,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259471,"byte_end":259547,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259552,"byte_end":259617,"line_start":553,"line_end":553,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259622,"byte_end":259625,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259630,"byte_end":259701,"line_start":555,"line_end":555,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259706,"byte_end":259709,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259714,"byte_end":259790,"line_start":557,"line_end":557,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259795,"byte_end":259869,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259874,"byte_end":259899,"line_start":559,"line_end":559,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259904,"byte_end":259907,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259912,"byte_end":259926,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259931,"byte_end":259938,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259943,"byte_end":259984,"line_start":563,"line_end":563,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":259989,"byte_end":260046,"line_start":564,"line_end":564,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260051,"byte_end":260076,"line_start":565,"line_end":565,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260081,"byte_end":260084,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260089,"byte_end":260159,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260164,"byte_end":260219,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260224,"byte_end":260286,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260291,"byte_end":260306,"line_start":570,"line_end":570,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260311,"byte_end":260318,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260323,"byte_end":260326,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260331,"byte_end":260352,"line_start":573,"line_end":573,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260357,"byte_end":260406,"line_start":574,"line_end":574,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260411,"byte_end":260467,"line_start":575,"line_end":575,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260472,"byte_end":260480,"line_start":576,"line_end":576,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260485,"byte_end":260492,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262162,"byte_end":262173,"line_start":625,"line_end":625,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260747,"byte_end":260812,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260817,"byte_end":260820,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260825,"byte_end":260898,"line_start":589,"line_end":589,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260903,"byte_end":260976,"line_start":590,"line_end":590,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":260981,"byte_end":261054,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261059,"byte_end":261129,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261134,"byte_end":261137,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261142,"byte_end":261156,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261161,"byte_end":261164,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261169,"byte_end":261176,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261181,"byte_end":261222,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261227,"byte_end":261258,"line_start":598,"line_end":598,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261263,"byte_end":261314,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261319,"byte_end":261339,"line_start":600,"line_end":600,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261344,"byte_end":261347,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261352,"byte_end":261391,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261396,"byte_end":261435,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261440,"byte_end":261479,"line_start":604,"line_end":604,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261484,"byte_end":261487,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261492,"byte_end":261519,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261524,"byte_end":261567,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261572,"byte_end":261579,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261584,"byte_end":261611,"line_start":609,"line_end":609,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261616,"byte_end":261659,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261664,"byte_end":261708,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261713,"byte_end":261720,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261725,"byte_end":261752,"line_start":613,"line_end":613,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261757,"byte_end":261802,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261807,"byte_end":261852,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261857,"byte_end":261901,"line_start":616,"line_end":616,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261906,"byte_end":261913,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261918,"byte_end":261921,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261926,"byte_end":261965,"line_start":619,"line_end":619,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":261970,"byte_end":262019,"line_start":620,"line_end":620,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262024,"byte_end":262073,"line_start":621,"line_end":621,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262078,"byte_end":262128,"line_start":622,"line_end":622,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262133,"byte_end":262142,"line_start":623,"line_end":623,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262147,"byte_end":262154,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263653,"byte_end":263661,"line_start":662,"line_end":662,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262366,"byte_end":262436,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262441,"byte_end":262501,"line_start":635,"line_end":635,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262506,"byte_end":262509,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262514,"byte_end":262584,"line_start":637,"line_end":637,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262589,"byte_end":262665,"line_start":638,"line_end":638,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262670,"byte_end":262746,"line_start":639,"line_end":639,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262751,"byte_end":262821,"line_start":640,"line_end":640,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262826,"byte_end":262852,"line_start":641,"line_end":641,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262857,"byte_end":262860,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262865,"byte_end":262945,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":262950,"byte_end":263019,"line_start":644,"line_end":644,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263024,"byte_end":263045,"line_start":645,"line_end":645,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263050,"byte_end":263053,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263058,"byte_end":263072,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263077,"byte_end":263080,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263085,"byte_end":263092,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263097,"byte_end":263138,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263143,"byte_end":263189,"line_start":651,"line_end":651,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263194,"byte_end":263197,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263202,"byte_end":263271,"line_start":653,"line_end":653,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263276,"byte_end":263353,"line_start":654,"line_end":654,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263358,"byte_end":263391,"line_start":655,"line_end":655,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263396,"byte_end":263399,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263404,"byte_end":263490,"line_start":657,"line_end":657,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263495,"byte_end":263581,"line_start":658,"line_end":658,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263586,"byte_end":263620,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263625,"byte_end":263633,"line_start":660,"line_end":660,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263638,"byte_end":263645,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265143,"byte_end":265153,"line_start":705,"line_end":705,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263897,"byte_end":263959,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":263964,"byte_end":264039,"line_start":672,"line_end":672,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264044,"byte_end":264047,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264052,"byte_end":264123,"line_start":674,"line_end":674,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264128,"byte_end":264204,"line_start":675,"line_end":675,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264209,"byte_end":264248,"line_start":676,"line_end":676,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264253,"byte_end":264256,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264261,"byte_end":264347,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264352,"byte_end":264355,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264360,"byte_end":264444,"line_start":680,"line_end":680,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264449,"byte_end":264505,"line_start":681,"line_end":681,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264510,"byte_end":264513,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264518,"byte_end":264532,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264537,"byte_end":264540,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264545,"byte_end":264552,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264557,"byte_end":264598,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264603,"byte_end":264634,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264639,"byte_end":264677,"line_start":688,"line_end":688,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264682,"byte_end":264702,"line_start":689,"line_end":689,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264707,"byte_end":264710,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264715,"byte_end":264776,"line_start":691,"line_end":691,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264781,"byte_end":264784,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264789,"byte_end":264816,"line_start":693,"line_end":693,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264821,"byte_end":264852,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264857,"byte_end":264883,"line_start":695,"line_end":695,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264888,"byte_end":264958,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264963,"byte_end":264972,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264977,"byte_end":264984,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264989,"byte_end":264992,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":264997,"byte_end":265036,"line_start":700,"line_end":700,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265041,"byte_end":265044,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265049,"byte_end":265109,"line_start":702,"line_end":702,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265114,"byte_end":265123,"line_start":703,"line_end":703,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":265128,"byte_end":265135,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":268252,"byte_end":268271,"line_start":784,"line_end":784,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":268144,"byte_end":268222,"line_start":782,"line_end":782,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":268227,"byte_end":268244,"line_start":783,"line_end":783,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327553,"byte_end":327557,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4382}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327438,"byte_end":327475,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327493,"byte_end":327541,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3036},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328075,"byte_end":328079,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327609,"byte_end":327673,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327674,"byte_end":327702,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327703,"byte_end":327706,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327707,"byte_end":327780,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327781,"byte_end":327836,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327837,"byte_end":327840,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327841,"byte_end":327848,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327849,"byte_end":327890,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327891,"byte_end":327934,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327935,"byte_end":327938,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327939,"byte_end":327983,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327984,"byte_end":328049,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328050,"byte_end":328059,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328060,"byte_end":328067,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328721,"byte_end":328727,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4388}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328604,"byte_end":328643,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328661,"byte_end":328709,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3054},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329251,"byte_end":329257,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328749,"byte_end":328809,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328810,"byte_end":328813,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328814,"byte_end":328881,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328882,"byte_end":328954,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":328955,"byte_end":329012,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329013,"byte_end":329016,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329017,"byte_end":329024,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329025,"byte_end":329066,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329067,"byte_end":329110,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329111,"byte_end":329114,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329115,"byte_end":329150,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329151,"byte_end":329225,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329226,"byte_end":329235,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329236,"byte_end":329243,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330042,"byte_end":330047,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":329926,"byte_end":329964,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":329982,"byte_end":330030,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3078},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330215,"byte_end":330220,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330085,"byte_end":330133,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330134,"byte_end":330137,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330138,"byte_end":330207,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3103},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331154,"byte_end":331158,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330847,"byte_end":330888,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330889,"byte_end":330892,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330893,"byte_end":330900,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330901,"byte_end":330942,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330943,"byte_end":330986,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330987,"byte_end":330990,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":330991,"byte_end":331035,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331036,"byte_end":331091,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331092,"byte_end":331128,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331129,"byte_end":331138,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331139,"byte_end":331146,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4398},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331426,"byte_end":331430,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4400}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331237,"byte_end":331290,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331291,"byte_end":331294,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331295,"byte_end":331348,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331366,"byte_end":331414,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4407},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332526,"byte_end":332533,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4409}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332406,"byte_end":332448,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332466,"byte_end":332514,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3129},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332709,"byte_end":332716,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332577,"byte_end":332631,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332632,"byte_end":332635,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332636,"byte_end":332701,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3151},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333422,"byte_end":333428,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3153}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333321,"byte_end":333361,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333362,"byte_end":333410,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3159},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334116,"byte_end":334123,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333628,"byte_end":333701,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333702,"byte_end":333705,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333706,"byte_end":333765,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333766,"byte_end":333769,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333770,"byte_end":333784,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333785,"byte_end":333788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333789,"byte_end":333796,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333797,"byte_end":333830,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333831,"byte_end":333859,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333860,"byte_end":333863,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333864,"byte_end":333893,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333894,"byte_end":333897,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333898,"byte_end":333962,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333963,"byte_end":334016,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334017,"byte_end":334038,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334039,"byte_end":334092,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334093,"byte_end":334100,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334101,"byte_end":334108,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4413},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334728,"byte_end":334734,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`select()`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334609,"byte_end":334650,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334668,"byte_end":334716,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3184},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335350,"byte_end":335356,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334874,"byte_end":334942,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334943,"byte_end":335019,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335020,"byte_end":335068,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335069,"byte_end":335072,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335073,"byte_end":335147,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335148,"byte_end":335217,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335218,"byte_end":335245,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335246,"byte_end":335249,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335250,"byte_end":335321,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335322,"byte_end":335342,"line_start":26,"line_end":26,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335735,"byte_end":335742,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335627,"byte_end":335701,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335706,"byte_end":335723,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336098,"byte_end":336105,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335836,"byte_end":335904,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335909,"byte_end":335940,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335945,"byte_end":335948,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335953,"byte_end":336026,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336031,"byte_end":336086,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336480,"byte_end":336491,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336211,"byte_end":336286,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336291,"byte_end":336322,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336327,"byte_end":336330,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336335,"byte_end":336408,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336413,"byte_end":336468,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336997,"byte_end":337007,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336761,"byte_end":336824,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336829,"byte_end":336832,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336837,"byte_end":336909,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":336914,"byte_end":336985,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3222},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340351,"byte_end":340357,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":338909,"byte_end":338979,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":338980,"byte_end":338983,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":338984,"byte_end":339053,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339054,"byte_end":339135,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339136,"byte_end":339167,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339168,"byte_end":339171,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339172,"byte_end":339251,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339252,"byte_end":339331,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339332,"byte_end":339386,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339387,"byte_end":339390,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339391,"byte_end":339471,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339472,"byte_end":339542,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339543,"byte_end":339565,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339566,"byte_end":339569,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339570,"byte_end":339647,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339648,"byte_end":339720,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339721,"byte_end":339798,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339799,"byte_end":339859,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339860,"byte_end":339863,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339864,"byte_end":339877,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339878,"byte_end":339881,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339882,"byte_end":339889,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339890,"byte_end":339931,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339932,"byte_end":339975,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339976,"byte_end":339979,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":339980,"byte_end":340035,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340036,"byte_end":340059,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340060,"byte_end":340099,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340100,"byte_end":340137,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340138,"byte_end":340177,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340178,"byte_end":340194,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340195,"byte_end":340211,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340212,"byte_end":340221,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340222,"byte_end":340229,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340230,"byte_end":340233,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340234,"byte_end":340286,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340287,"byte_end":340325,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340326,"byte_end":340335,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340336,"byte_end":340343,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3227},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340673,"byte_end":340679,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`unfold`] function.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340573,"byte_end":340612,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340613,"byte_end":340661,"line_start":59,"line_end":59,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":3266},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":4430},{"krate":0,"index":3267},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3286},{"krate":0,"index":3293}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/mod.rs","byte_start":342336,"byte_end":342357,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3275},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343547,"byte_end":343555,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343504,"byte_end":343536,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":3276},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":346202,"byte_end":346215,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":346154,"byte_end":346191,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3294},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","parent":null,"children":[{"krate":0,"index":3295}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348619,"byte_end":348654,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348655,"byte_end":348711,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3295},"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349348,"byte_end":349353,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348713,"byte_end":348748,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348749,"byte_end":348752,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348753,"byte_end":348828,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348829,"byte_end":348866,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348867,"byte_end":348870,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348871,"byte_end":348935,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348936,"byte_end":348939,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":348940,"byte_end":349011,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349012,"byte_end":349063,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349064,"byte_end":349156,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349157,"byte_end":349160,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349161,"byte_end":349232,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/never.rs","byte_start":349233,"byte_end":349338,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3321},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3345},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3372},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38481,"byte_end":38486,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38532,"byte_end":38537,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38698,"byte_end":38703,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58192,"byte_end":58199,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58550,"byte_end":58557,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58806,"byte_end":58813,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59764,"byte_end":59771,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59797,"byte_end":59804,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60025,"byte_end":60032,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60209,"byte_end":60216,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60948,"byte_end":60957,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60983,"byte_end":60992,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61249,"byte_end":61258,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61441,"byte_end":61450,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62287,"byte_end":62297,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62323,"byte_end":62333,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3461},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62593,"byte_end":62603,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62789,"byte_end":62799,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63581,"byte_end":63591,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63793,"byte_end":63803,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63914,"byte_end":63924,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64545,"byte_end":64551,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64800,"byte_end":64806,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64851,"byte_end":64857,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":65019,"byte_end":65025,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65942,"byte_end":65947,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66193,"byte_end":66198,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66243,"byte_end":66248,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66419,"byte_end":66424,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67384,"byte_end":67395,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67697,"byte_end":67708,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67759,"byte_end":67770,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":68005,"byte_end":68016,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69139,"byte_end":69145,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3529},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69494,"byte_end":69500,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69746,"byte_end":69752,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70818,"byte_end":70834,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71119,"byte_end":71135,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71411,"byte_end":71427,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71622,"byte_end":71638,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73105,"byte_end":73117,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73384,"byte_end":73396,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73438,"byte_end":73450,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73627,"byte_end":73639,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74578,"byte_end":74595,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74685,"byte_end":74702,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74963,"byte_end":74980,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":75415,"byte_end":75420,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":76153,"byte_end":76158,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77015,"byte_end":77032,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77369,"byte_end":77386,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80023,"byte_end":80031,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80207,"byte_end":80215,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42132,"byte_end":42135,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83235,"byte_end":83239,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83812,"byte_end":83816,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83948,"byte_end":83952,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84499,"byte_end":84506,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85057,"byte_end":85064,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85209,"byte_end":85216,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85243,"byte_end":85250,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85998,"byte_end":86007,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86586,"byte_end":86595,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87801,"byte_end":87810,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":88026,"byte_end":88035,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89345,"byte_end":89357,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89432,"byte_end":89444,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89774,"byte_end":89786,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89974,"byte_end":89986,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90399,"byte_end":90405,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91075,"byte_end":91081,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91223,"byte_end":91229,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91706,"byte_end":91711,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91890,"byte_end":91895,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91927,"byte_end":91932,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92029,"byte_end":92034,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98750,"byte_end":98756,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100119,"byte_end":100125,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100828,"byte_end":100834,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109141,"byte_end":109150,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110856,"byte_end":110865,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112275,"byte_end":112281,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112666,"byte_end":112672,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113053,"byte_end":113059,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113300,"byte_end":113306,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113735,"byte_end":113741,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114017,"byte_end":114023,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114465,"byte_end":114471,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165478,"byte_end":165483,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3984},{"krate":0,"index":3987},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165826,"byte_end":165831,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":166036,"byte_end":166041,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167572,"byte_end":167579,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167620,"byte_end":167627,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4002},{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168013,"byte_end":168020,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168196,"byte_end":168203,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169088,"byte_end":169094,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169112,"byte_end":169118,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4011},{"krate":0,"index":4014},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169473,"byte_end":169479,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":170276,"byte_end":170282,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170953,"byte_end":170962,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170988,"byte_end":170997,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172390,"byte_end":172399,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172517,"byte_end":172526,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173842,"byte_end":173848,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173943,"byte_end":173949,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174341,"byte_end":174347,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175976,"byte_end":175982,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":176250,"byte_end":176256,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178455,"byte_end":178464,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178550,"byte_end":178559,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178856,"byte_end":178865,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180360,"byte_end":180369,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180640,"byte_end":180649,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182604,"byte_end":182611,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182681,"byte_end":182688,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4053},{"krate":0,"index":4056}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182805,"byte_end":182812,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184113,"byte_end":184120,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184302,"byte_end":184309,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185733,"byte_end":185737,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185792,"byte_end":185796,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186152,"byte_end":186156,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186631,"byte_end":186635,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186882,"byte_end":186886,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188343,"byte_end":188350,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188436,"byte_end":188443,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188736,"byte_end":188743,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189139,"byte_end":189146,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189397,"byte_end":189404,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190570,"byte_end":190574,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190592,"byte_end":190596,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4087},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192255,"byte_end":192259,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192357,"byte_end":192361,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193581,"byte_end":193593,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193627,"byte_end":193639,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196172,"byte_end":196184,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196304,"byte_end":196316,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197146,"byte_end":197153,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197192,"byte_end":197199,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197418,"byte_end":197425,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198812,"byte_end":198819,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":199138,"byte_end":199145,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200258,"byte_end":200261,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200300,"byte_end":200303,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200521,"byte_end":200524,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201910,"byte_end":201913,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":202094,"byte_end":202097,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203212,"byte_end":203216,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203267,"byte_end":203271,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203422,"byte_end":203426,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203565,"byte_end":203569,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204218,"byte_end":204232,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204393,"byte_end":204407,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204551,"byte_end":204565,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205778,"byte_end":205786,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205812,"byte_end":205820,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4134},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209041,"byte_end":209049,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209191,"byte_end":209199,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210336,"byte_end":210340,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210377,"byte_end":210381,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210652,"byte_end":210656,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210767,"byte_end":210771,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211754,"byte_end":211758,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211784,"byte_end":211788,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213180,"byte_end":213184,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213302,"byte_end":213306,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214911,"byte_end":214920,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214969,"byte_end":214978,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":215430,"byte_end":215439,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4148},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217163,"byte_end":217172,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217432,"byte_end":217441,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219736,"byte_end":219740,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219766,"byte_end":219770,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4167},{"krate":0,"index":4170},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221144,"byte_end":221148,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":222131,"byte_end":222135,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223083,"byte_end":223092,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223141,"byte_end":223150,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223606,"byte_end":223615,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223851,"byte_end":223860,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225373,"byte_end":225382,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":226953,"byte_end":226962,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227944,"byte_end":227948,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227997,"byte_end":228001,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228291,"byte_end":228295,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228431,"byte_end":228435,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229835,"byte_end":229839,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":230077,"byte_end":230081,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232026,"byte_end":232029,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232159,"byte_end":232162,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4206},{"krate":0,"index":4209},{"krate":0,"index":4211},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234094,"byte_end":234097,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234288,"byte_end":234291,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236984,"byte_end":236988,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237043,"byte_end":237047,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237533,"byte_end":237537,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4213},{"krate":0,"index":4216},{"krate":0,"index":4218},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237829,"byte_end":237833,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239391,"byte_end":239395,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":240613,"byte_end":240617,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128530,"byte_end":128531,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271183,"byte_end":271190,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271239,"byte_end":271246,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271539,"byte_end":271546,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271682,"byte_end":271689,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":273073,"byte_end":273080,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":274260,"byte_end":274267,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275210,"byte_end":275217,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275241,"byte_end":275248,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276557,"byte_end":276564,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276743,"byte_end":276750,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277864,"byte_end":277873,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277912,"byte_end":277921,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278142,"byte_end":278151,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278236,"byte_end":278245,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279553,"byte_end":279562,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279740,"byte_end":279749,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280931,"byte_end":280941,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280980,"byte_end":280990,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281212,"byte_end":281222,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281307,"byte_end":281317,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282628,"byte_end":282638,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282819,"byte_end":282829,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283933,"byte_end":283943,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285266,"byte_end":285276,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285397,"byte_end":285407,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286362,"byte_end":286367,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286406,"byte_end":286411,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2417}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286628,"byte_end":286633,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287987,"byte_end":287992,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":288177,"byte_end":288182,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289302,"byte_end":289308,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289347,"byte_end":289353,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289571,"byte_end":289577,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290933,"byte_end":290939,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":291127,"byte_end":291133,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292337,"byte_end":292343,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292392,"byte_end":292398,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292690,"byte_end":292696,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292832,"byte_end":292838,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294219,"byte_end":294225,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":295470,"byte_end":295476,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296392,"byte_end":296399,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296453,"byte_end":296460,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296626,"byte_end":296633,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296775,"byte_end":296782,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297504,"byte_end":297514,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297563,"byte_end":297573,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297869,"byte_end":297879,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":298295,"byte_end":298305,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299651,"byte_end":299660,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299754,"byte_end":299763,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300159,"byte_end":300168,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301722,"byte_end":301731,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":302000,"byte_end":302009,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304223,"byte_end":304235,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304317,"byte_end":304329,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304629,"byte_end":304641,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4307},{"krate":0,"index":4309},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306040,"byte_end":306052,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306342,"byte_end":306354,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308352,"byte_end":308362,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308433,"byte_end":308443,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4319},{"krate":0,"index":4322}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308561,"byte_end":308571,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309927,"byte_end":309937,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":310183,"byte_end":310193,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311837,"byte_end":311847,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312222,"byte_end":312232,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312272,"byte_end":312282,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312470,"byte_end":312480,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313416,"byte_end":313425,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313443,"byte_end":313452,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4349},{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313796,"byte_end":313805,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315093,"byte_end":315100,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315155,"byte_end":315162,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315521,"byte_end":315528,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":2843}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316028,"byte_end":316035,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316301,"byte_end":316308,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320549,"byte_end":320558,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320605,"byte_end":320614,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320898,"byte_end":320907,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":4365}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":321063,"byte_end":321072,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322820,"byte_end":322832,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322881,"byte_end":322893,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323349,"byte_end":323361,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323453,"byte_end":323465,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4371},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325175,"byte_end":325187,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":326819,"byte_end":326831,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244570,"byte_end":244571,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327597,"byte_end":327601,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328207,"byte_end":328211,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329345,"byte_end":329351,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329378,"byte_end":329384,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329691,"byte_end":329697,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330309,"byte_end":330314,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330346,"byte_end":330351,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330436,"byte_end":330441,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331492,"byte_end":331496,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331516,"byte_end":331520,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331601,"byte_end":331605,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":332188,"byte_end":332192,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332802,"byte_end":332809,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332841,"byte_end":332848,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332933,"byte_end":332940,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333465,"byte_end":333471,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333502,"byte_end":333508,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334250,"byte_end":334256,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334853,"byte_end":334859,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335604,"byte_end":335610,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337133,"byte_end":337139,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337357,"byte_end":337363,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3201},{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340783,"byte_end":340789,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340836,"byte_end":340842,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341123,"byte_end":341129,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341290,"byte_end":341296,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341522,"byte_end":341528,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3226,"byte_end":3232,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3308,"byte_end":3314,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1122}},{"kind":"Mod","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3500,"byte_end":3504,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3266}},{"kind":"Mod","span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/lib.rs","byte_start":3515,"byte_end":3520,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3294}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":24876,"byte_end":24883,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25160,"byte_end":25167,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25441,"byte_end":25448,"line_start":40,"line_end":40,"column_start":27,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten.rs","byte_start":25601,"byte_end":25608,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26268,"byte_end":26281,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26510,"byte_end":26523,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":26955,"byte_end":26960,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27659,"byte_end":27672,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":69},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/flatten_stream.rs","byte_start":27954,"byte_end":27967,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":69},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":29033,"byte_end":29037,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":30920,"byte_end":30924,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3315},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/fuse.rs","byte_start":31038,"byte_end":31042,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3315},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":31819,"byte_end":31829,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32041,"byte_end":32051,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3324},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/into_stream.rs","byte_start":32376,"byte_end":32386,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3324},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":32855,"byte_end":32858,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33098,"byte_end":33101,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3333},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33146,"byte_end":33149,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3333},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/map.rs","byte_start":33309,"byte_end":33312,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3333},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34144,"byte_end":34148,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34473,"byte_end":34477,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3347},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/then.rs","byte_start":34687,"byte_end":34691,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3347},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35409,"byte_end":35416,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35679,"byte_end":35686,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35728,"byte_end":35735,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3360},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/inspect.rs","byte_start":35904,"byte_end":35911,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3360},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36637,"byte_end":36646,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36808,"byte_end":36817,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3374},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36866,"byte_end":36875,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3374},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/unit_error.rs","byte_start":36978,"byte_end":36987,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3374},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37578,"byte_end":37588,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37752,"byte_end":37762,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3383},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37811,"byte_end":37821,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3383},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/never_error.rs","byte_start":37924,"byte_end":37934,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3383},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38481,"byte_end":38486,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3392},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38532,"byte_end":38537,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/chain.rs","byte_start":38698,"byte_end":38703,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8823,"byte_end":8824,"line_start":81,"line_end":81,"column_start":31,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/future/mod.rs","byte_start":8955,"byte_end":8961,"line_start":85,"line_end":85,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":7916},"to":{"krate":0,"index":295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58192,"byte_end":58199,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58550,"byte_end":58557,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3410},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/and_then.rs","byte_start":58806,"byte_end":58813,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3410},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59764,"byte_end":59771,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3423},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":59797,"byte_end":59804,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60025,"byte_end":60032,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3423},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/err_into.rs","byte_start":60209,"byte_end":60216,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3423},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60948,"byte_end":60957,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3435},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":60983,"byte_end":60992,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61249,"byte_end":61258,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3435},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_ok.rs","byte_start":61441,"byte_end":61450,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3435},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62287,"byte_end":62297,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3449},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62323,"byte_end":62333,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62593,"byte_end":62603,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3449},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/inspect_err.rs","byte_start":62789,"byte_end":62799,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3449},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63581,"byte_end":63591,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63793,"byte_end":63803,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3463},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/into_future.rs","byte_start":63914,"byte_end":63924,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3463},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64545,"byte_end":64551,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64800,"byte_end":64806,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3472},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":64851,"byte_end":64857,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3472},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_err.rs","byte_start":65019,"byte_end":65025,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3472},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":65942,"byte_end":65947,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66193,"byte_end":66198,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3486},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66243,"byte_end":66248,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3486},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok.rs","byte_start":66419,"byte_end":66424,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3486},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67384,"byte_end":67395,"line_start":15,"line_end":15,"column_start":17,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67697,"byte_end":67708,"line_start":26,"line_end":26,"column_start":34,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3500},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":67759,"byte_end":67770,"line_start":28,"line_end":28,"column_start":36,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3500},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/map_ok_or_else.rs","byte_start":68005,"byte_end":68016,"line_start":38,"line_end":38,"column_start":31,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3500},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69139,"byte_end":69145,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69494,"byte_end":69500,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3519},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/or_else.rs","byte_start":69746,"byte_end":69752,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3519},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":70818,"byte_end":70834,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71119,"byte_end":71135,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71411,"byte_end":71427,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":618},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_flatten_stream.rs","byte_start":71622,"byte_end":71638,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":618},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73105,"byte_end":73117,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73384,"byte_end":73396,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3535},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73438,"byte_end":73450,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3535},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/unwrap_or_else.rs","byte_start":73627,"byte_end":73639,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3535},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74578,"byte_end":74595,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74685,"byte_end":74702,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":74963,"byte_end":74980,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":75415,"byte_end":75420,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":76153,"byte_end":76158,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77015,"byte_end":77032,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":677},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/flatten_stream_sink.rs","byte_start":77369,"byte_end":77386,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":677},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80023,"byte_end":80031,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3567},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/try_chain.rs","byte_start":80207,"byte_end":80215,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42132,"byte_end":42135,"line_start":77,"line_end":77,"column_start":48,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":734},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_future/mod.rs","byte_start":42218,"byte_end":42227,"line_start":80,"line_end":80,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":735}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83235,"byte_end":83239,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3585},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83812,"byte_end":83816,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3585},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/lazy.rs","byte_start":83948,"byte_end":83952,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3585},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":84499,"byte_end":84506,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3591},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85057,"byte_end":85064,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85209,"byte_end":85216,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/pending.rs","byte_start":85243,"byte_end":85250,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3591},"to":{"krate":1,"index":1562}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":85998,"byte_end":86007,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3597},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":86586,"byte_end":86595,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":87801,"byte_end":87810,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3597},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/maybe_done.rs","byte_start":88026,"byte_end":88035,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3597},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89345,"byte_end":89357,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89432,"byte_end":89444,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3610},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89774,"byte_end":89786,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3610},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/option.rs","byte_start":89974,"byte_end":89986,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3610},"to":{"krate":1,"index":1776}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":90399,"byte_end":90405,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91075,"byte_end":91081,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/poll_fn.rs","byte_start":91223,"byte_end":91229,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":882},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91706,"byte_end":91711,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91890,"byte_end":91895,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3622},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":91927,"byte_end":91932,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3622},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/ready.rs","byte_start":92029,"byte_end":92034,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3622},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":98750,"byte_end":98756,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3798},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100119,"byte_end":100125,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3798},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/select.rs","byte_start":100828,"byte_end":100834,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3798},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":109141,"byte_end":109150,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3950},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/try_select.rs","byte_start":110856,"byte_end":110865,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3950},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112275,"byte_end":112281,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":112666,"byte_end":112672,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113053,"byte_end":113059,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113300,"byte_end":113306,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3958},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":113735,"byte_end":113741,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114017,"byte_end":114023,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/future/either.rs","byte_start":114465,"byte_end":114471,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3958},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165478,"byte_end":165483,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":165826,"byte_end":165831,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3975},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/chain.rs","byte_start":166036,"byte_end":166041,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3975},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167572,"byte_end":167579,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3990},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":167620,"byte_end":167627,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168013,"byte_end":168020,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3990},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/collect.rs","byte_start":168196,"byte_end":168203,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3990},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169088,"byte_end":169094,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4004},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169112,"byte_end":169118,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":169473,"byte_end":169479,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4004},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/concat.rs","byte_start":170276,"byte_end":170282,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4004},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170953,"byte_end":170962,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4016},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":170988,"byte_end":170997,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172390,"byte_end":172399,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4016},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/enumerate.rs","byte_start":172517,"byte_end":172526,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4016},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173842,"byte_end":173848,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":173943,"byte_end":173949,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1264},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":174341,"byte_end":174347,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":175976,"byte_end":175982,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1264},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter.rs","byte_start":176250,"byte_end":176256,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1264},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178455,"byte_end":178464,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1316},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178550,"byte_end":178559,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1316},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":178856,"byte_end":178865,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180360,"byte_end":180369,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1316},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/filter_map.rs","byte_start":180640,"byte_end":180649,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1316},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182604,"byte_end":182611,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4046},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182681,"byte_end":182688,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":182805,"byte_end":182812,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184113,"byte_end":184120,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4046},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/flatten.rs","byte_start":184302,"byte_end":184309,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4046},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185733,"byte_end":185737,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":185792,"byte_end":185796,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186152,"byte_end":186156,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186631,"byte_end":186635,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1397},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fold.rs","byte_start":186882,"byte_end":186886,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188343,"byte_end":188350,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188436,"byte_end":188443,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":188736,"byte_end":188743,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189139,"byte_end":189146,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1452},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/for_each.rs","byte_start":189397,"byte_end":189404,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1452},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190570,"byte_end":190574,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4077},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":190592,"byte_end":190596,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192255,"byte_end":192259,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4077},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/fuse.rs","byte_start":192357,"byte_end":192361,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4077},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193581,"byte_end":193593,"line_start":15,"line_end":15,"column_start":27,"column_end":39},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4089},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":193627,"byte_end":193639,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196172,"byte_end":196184,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4089},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/into_future.rs","byte_start":196304,"byte_end":196316,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4089},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197146,"byte_end":197153,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1555},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197192,"byte_end":197199,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1555},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":197418,"byte_end":197425,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":198812,"byte_end":198819,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1555},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/inspect.rs","byte_start":199138,"byte_end":199145,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1555},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200258,"byte_end":200261,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1604},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200300,"byte_end":200303,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1604},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":200521,"byte_end":200524,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":201910,"byte_end":201913,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1604},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/map.rs","byte_start":202094,"byte_end":202097,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1604},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203212,"byte_end":203216,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4108},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203267,"byte_end":203271,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203422,"byte_end":203426,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4108},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/next.rs","byte_start":203565,"byte_end":203569,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4108},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204218,"byte_end":204232,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204393,"byte_end":204407,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4116},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/select_next_some.rs","byte_start":204551,"byte_end":204565,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4116},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205778,"byte_end":205786,"line_start":24,"line_end":24,"column_start":36,"column_end":44},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4124},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":205812,"byte_end":205820,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209041,"byte_end":209049,"line_start":114,"line_end":114,"column_start":34,"column_end":42},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4124},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":209191,"byte_end":209199,"line_start":120,"line_end":120,"column_start":28,"column_end":36},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4124},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210336,"byte_end":210340,"line_start":159,"line_end":159,"column_start":28,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210377,"byte_end":210381,"line_start":161,"line_end":161,"column_start":25,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210652,"byte_end":210656,"line_start":173,"line_end":173,"column_start":34,"column_end":38},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1727},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/peek.rs","byte_start":210767,"byte_end":210771,"line_start":179,"line_end":179,"column_start":25,"column_end":29},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1727},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211754,"byte_end":211758,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4136},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":211784,"byte_end":211788,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213180,"byte_end":213184,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4136},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip.rs","byte_start":213302,"byte_end":213306,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4136},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214911,"byte_end":214920,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":214969,"byte_end":214978,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":215430,"byte_end":215439,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217163,"byte_end":217172,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1789},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/skip_while.rs","byte_start":217432,"byte_end":217441,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1789},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219736,"byte_end":219740,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4160},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":219766,"byte_end":219770,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":221144,"byte_end":221148,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4160},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take.rs","byte_start":222131,"byte_end":222135,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4160},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223083,"byte_end":223092,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1872},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223141,"byte_end":223150,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1872},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223606,"byte_end":223615,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":223851,"byte_end":223860,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":225373,"byte_end":225382,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1872},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/take_while.rs","byte_start":226953,"byte_end":226962,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1872},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227944,"byte_end":227948,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1929},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":227997,"byte_end":228001,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1929},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228291,"byte_end":228295,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":228431,"byte_end":228435,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":229835,"byte_end":229839,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1929},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/then.rs","byte_start":230077,"byte_end":230081,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1929},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232026,"byte_end":232029,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4192},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":232159,"byte_end":232162,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234094,"byte_end":234097,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4192},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/zip.rs","byte_start":234288,"byte_end":234291,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4192},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":236984,"byte_end":236988,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2026},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237043,"byte_end":237047,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2026},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237533,"byte_end":237537,"line_start":42,"line_end":42,"column_start":29,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":237829,"byte_end":237833,"line_start":53,"line_end":53,"column_start":24,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":239391,"byte_end":239395,"line_start":103,"line_end":103,"column_start":35,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2026},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/scan.rs","byte_start":240613,"byte_end":240617,"line_start":145,"line_end":145,"column_start":40,"column_end":44},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2026},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128530,"byte_end":128531,"line_start":161,"line_end":161,"column_start":31,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2081},"to":{"krate":0,"index":2082}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/stream/mod.rs","byte_start":128674,"byte_end":128680,"line_start":165,"line_end":165,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":2082}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271183,"byte_end":271190,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2188},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271239,"byte_end":271246,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2188},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271539,"byte_end":271546,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":271682,"byte_end":271689,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":273073,"byte_end":273080,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2188},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/and_then.rs","byte_start":274260,"byte_end":274267,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2188},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275210,"byte_end":275217,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4229},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":275241,"byte_end":275248,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276557,"byte_end":276564,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4229},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/err_into.rs","byte_start":276743,"byte_end":276750,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4229},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277864,"byte_end":277873,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2279},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":277912,"byte_end":277921,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2279},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278142,"byte_end":278151,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":278236,"byte_end":278245,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279553,"byte_end":279562,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2279},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_ok.rs","byte_start":279740,"byte_end":279749,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2279},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280931,"byte_end":280941,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2330},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":280980,"byte_end":280990,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2330},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281212,"byte_end":281222,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":281307,"byte_end":281317,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282628,"byte_end":282638,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2330},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/inspect_err.rs","byte_start":282819,"byte_end":282829,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2330},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":283933,"byte_end":283943,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285266,"byte_end":285276,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4251},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/into_stream.rs","byte_start":285397,"byte_end":285407,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4251},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286362,"byte_end":286367,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2406},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286406,"byte_end":286411,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2406},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":286628,"byte_end":286633,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":287987,"byte_end":287992,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2406},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_ok.rs","byte_start":288177,"byte_end":288182,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2406},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289302,"byte_end":289308,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2455},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289347,"byte_end":289353,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2455},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":289571,"byte_end":289577,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":290933,"byte_end":290939,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2455},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/map_err.rs","byte_start":291127,"byte_end":291133,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2455},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292337,"byte_end":292343,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2505},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292392,"byte_end":292398,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2505},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292690,"byte_end":292696,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":292832,"byte_end":292838,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":294219,"byte_end":294225,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2505},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/or_else.rs","byte_start":295470,"byte_end":295476,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2505},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296392,"byte_end":296399,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296453,"byte_end":296460,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296626,"byte_end":296633,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4278},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_next.rs","byte_start":296775,"byte_end":296782,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4278},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297504,"byte_end":297514,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297563,"byte_end":297573,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":297869,"byte_end":297879,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_for_each.rs","byte_start":298295,"byte_end":298305,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2586},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299651,"byte_end":299660,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":299754,"byte_end":299763,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2628},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":300159,"byte_end":300168,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":301722,"byte_end":301731,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2628},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter.rs","byte_start":302000,"byte_end":302009,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2628},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304223,"byte_end":304235,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2682},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304317,"byte_end":304329,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2682},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":304629,"byte_end":304641,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306040,"byte_end":306052,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2682},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_filter_map.rs","byte_start":306342,"byte_end":306354,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2682},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308352,"byte_end":308362,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4312},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308433,"byte_end":308443,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":308561,"byte_end":308571,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":309927,"byte_end":309937,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4312},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_flatten.rs","byte_start":310183,"byte_end":310193,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4312},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":311837,"byte_end":311847,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312222,"byte_end":312232,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4325},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312272,"byte_end":312282,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4325},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_collect.rs","byte_start":312470,"byte_end":312480,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4325},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313416,"byte_end":313425,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4339},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313443,"byte_end":313452,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_concat.rs","byte_start":313796,"byte_end":313805,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4339},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315093,"byte_end":315100,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315155,"byte_end":315162,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":315521,"byte_end":315528,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316028,"byte_end":316035,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2818},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_fold.rs","byte_start":316301,"byte_end":316308,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2818},"to":{"krate":1,"index":7916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320549,"byte_end":320558,"line_start":77,"line_end":77,"column_start":34,"column_end":43},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2874},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320605,"byte_end":320614,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2874},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":320898,"byte_end":320907,"line_start":92,"line_end":92,"column_start":17,"column_end":26},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_unfold.rs","byte_start":321063,"byte_end":321072,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2874},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322820,"byte_end":322832,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2918},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":322881,"byte_end":322893,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2918},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323349,"byte_end":323361,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":323453,"byte_end":323465,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":325175,"byte_end":325187,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2918},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/try_skip_while.rs","byte_start":326819,"byte_end":326831,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2918},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244570,"byte_end":244571,"line_start":109,"line_end":109,"column_start":46,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2963},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/try_stream/mod.rs","byte_start":244652,"byte_end":244661,"line_start":112,"line_end":112,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":2964}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":327597,"byte_end":327601,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4380},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/iter.rs","byte_start":328207,"byte_end":328211,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4380},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329345,"byte_end":329351,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4386},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329378,"byte_end":329384,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4386},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/repeat.rs","byte_start":329691,"byte_end":329697,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4386},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330309,"byte_end":330314,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4392},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330346,"byte_end":330351,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4392},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/empty.rs","byte_start":330436,"byte_end":330441,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4392},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331492,"byte_end":331496,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4398},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331516,"byte_end":331520,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":331601,"byte_end":331605,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4398},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/once.rs","byte_start":332188,"byte_end":332192,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4398},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332802,"byte_end":332809,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332841,"byte_end":332848,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4407},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/pending.rs","byte_start":332933,"byte_end":332940,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4407},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333465,"byte_end":333471,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3151},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":333502,"byte_end":333508,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3151},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/poll_fn.rs","byte_start":334250,"byte_end":334256,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3151},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":334853,"byte_end":334859,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4413},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":335604,"byte_end":335610,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337133,"byte_end":337139,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4413},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/select.rs","byte_start":337357,"byte_end":337363,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4413},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340783,"byte_end":340789,"line_start":66,"line_end":66,"column_start":34,"column_end":40},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3227},"to":{"krate":1,"index":1891}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":340836,"byte_end":340842,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3227},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341123,"byte_end":341129,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341290,"byte_end":341296,"line_start":87,"line_end":87,"column_start":39,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3227},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/stream/unfold.rs","byte_start":341522,"byte_end":341528,"line_start":96,"line_end":96,"column_start":34,"column_end":40},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3227},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3272},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":3276}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":343557,"byte_end":343562,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":3275}},{"span":{"file_name":"/home/nerun/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.4/src/task/spawn.rs","byte_start":346217,"byte_end":346227,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":3276}}]}